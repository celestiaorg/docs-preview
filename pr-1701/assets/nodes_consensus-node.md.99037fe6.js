import{c as e}from"./chunks/constants.295fc0ab.js";import{o as l,c as p,k as s,t as n,l as t,a,Q as o}from"./chunks/framework.cbe087bb.js";const c="/docs-preview/pr-1701/img/nodes/consensus-node.jpg",r=o('<h1 id="consensus-node" tabindex="-1">Consensus node <a class="header-anchor" href="#consensus-node" aria-label="Permalink to &quot;Consensus node&quot;">​</a></h1><p>This guide covers how to set up a consensus node on Celestia. Consensus nodes allow you to sync the entire blockchain history in the Celestia consensus layer.</p><p><img src="'+c+'" alt="consensus node"></p><h2 id="minimum-hardware-requirements" tabindex="-1">Minimum hardware requirements <a class="header-anchor" href="#minimum-hardware-requirements" aria-label="Permalink to &quot;Minimum hardware requirements&quot;">​</a></h2><p>The following minimum hardware requirements are recommended for running a consensus node:</p><ul><li>Memory: <strong>16 GB RAM</strong></li><li>CPU: <strong>Quad-Core</strong></li><li>Disk: <strong>2 TB SSD Storage</strong></li><li>Bandwidth: <strong>1 Gbps for Download/1 Gbps for Upload</strong></li></ul><h2 id="set-up-a-consensus-node" tabindex="-1">Set up a consensus node <a class="header-anchor" href="#set-up-a-consensus-node" aria-label="Permalink to &quot;Set up a consensus node&quot;">​</a></h2><p>The following tutorial is done on an Ubuntu Linux 20.04 (LTS) x64 instance machine.</p><h3 id="set-up-the-dependencies" tabindex="-1">Set up the dependencies <a class="header-anchor" href="#set-up-the-dependencies" aria-label="Permalink to &quot;Set up the dependencies&quot;">​</a></h3><p>Follow the instructions on <a href="./environment">installing dependencies</a>.</p><h3 id="install-celestia-app" tabindex="-1">Install celestia-app <a class="header-anchor" href="#install-celestia-app" aria-label="Permalink to &quot;Install celestia-app&quot;">​</a></h3><p>Follow the tutorial on <a href="./celestia-app">installing <code>celestia-app</code></a>.</p><h3 id="set-up-the-p2p-networks" tabindex="-1">Set up the P2P networks <a class="header-anchor" href="#set-up-the-p2p-networks" aria-label="Permalink to &quot;Set up the P2P networks&quot;">​</a></h3><p>To initialize the network, pick a &quot;node-name&quot; that describes your node. Keep in mind that this might change if a new testnet is deployed.</p>',14),i={class:"vp-code-group vp-adaptive-theme"},d=o('<div class="tabs"><input type="radio" name="group-meku0" id="tab-Fc3xweI" checked="checked"><label for="tab-Fc3xweI">Mainnet Beta</label><input type="radio" name="group-meku0" id="tab-RfAIzwQ"><label for="tab-RfAIzwQ">Mocha</label><input type="radio" name="group-meku0" id="tab-OWutIqS"><label for="tab-OWutIqS">Arabica</label></div>',1),_={class:"blocks"},y={class:"language-bash vp-adaptive-theme active"},h=s("button",{title:"Copy Code",class:"copy"},null,-1),E=s("span",{class:"lang"},"bash",-1),u={class:"shiki github-dark vp-code-dark"},F={class:"line"},C=o('<span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;node-name&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain-id</span><span style="color:#E1E4E8;"> </span>',8),g={style:{color:"#9ECBFF"}},T={class:"shiki github-light vp-code-light"},b={class:"line"},m=o('<span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node-name&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain-id</span><span style="color:#24292E;"> </span>',8),S={style:{color:"#032F62"}},v={class:"language-bash vp-adaptive-theme"},k=s("button",{title:"Copy Code",class:"copy"},null,-1),B=s("span",{class:"lang"},"bash",-1),A={class:"shiki github-dark vp-code-dark"},f={class:"line"},P=o('<span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;node-name&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain-id</span><span style="color:#E1E4E8;"> </span>',8),q={style:{color:"#9ECBFF"}},I={class:"shiki github-light vp-code-light"},x={class:"line"},R=o('<span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node-name&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain-id</span><span style="color:#24292E;"> </span>',8),V={style:{color:"#032F62"}},D={class:"language-bash vp-adaptive-theme"},w=s("button",{title:"Copy Code",class:"copy"},null,-1),N=s("span",{class:"lang"},"bash",-1),$={class:"shiki github-dark vp-code-dark"},O={class:"line"},M=o('<span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;node-name&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain-id</span><span style="color:#E1E4E8;"> </span>',8),H={style:{color:"#9ECBFF"}},L={class:"shiki github-light vp-code-light"},Q={class:"line"},j=o('<span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node-name&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain-id</span><span style="color:#24292E;"> </span>',8),U={style:{color:"#032F62"}},z=s("p",null,[a("Download the "),s("code",null,"genesis.json"),a(" file:")],-1),X={class:"vp-code-group vp-adaptive-theme"},G=o('<div class="tabs"><input type="radio" name="group-uw_PT" id="tab-9dgPj_U" checked="checked"><label for="tab-9dgPj_U">Mainnet Beta</label><input type="radio" name="group-uw_PT" id="tab-nBha2Zb"><label for="tab-nBha2Zb">Mocha</label><input type="radio" name="group-uw_PT" id="tab-O343GXA"><label for="tab-O343GXA">Arabica</label></div>',1),K={class:"blocks"},W={class:"language-bash vp-adaptive-theme active"},Z=s("button",{title:"Copy Code",class:"copy"},null,-1),Y=s("span",{class:"lang"},"bash",-1),J={class:"shiki github-dark vp-code-dark"},ss={class:"line"},os=s("span",{style:{color:"#B392F0"}},"celestia-appd",-1),as=s("span",{style:{color:"#E1E4E8"}}," ",-1),es=s("span",{style:{color:"#9ECBFF"}},"download-genesis",-1),ns=s("span",{style:{color:"#E1E4E8"}}," ",-1),ts={style:{color:"#9ECBFF"}},ls={class:"shiki github-light vp-code-light"},ps={class:"line"},cs=s("span",{style:{color:"#6F42C1"}},"celestia-appd",-1),rs=s("span",{style:{color:"#24292E"}}," ",-1),is=s("span",{style:{color:"#032F62"}},"download-genesis",-1),ds=s("span",{style:{color:"#24292E"}}," ",-1),_s={style:{color:"#032F62"}},ys={class:"language-bash vp-adaptive-theme"},hs=s("button",{title:"Copy Code",class:"copy"},null,-1),Es=s("span",{class:"lang"},"bash",-1),us={class:"shiki github-dark vp-code-dark"},Fs={class:"line"},Cs=s("span",{style:{color:"#B392F0"}},"celestia-appd",-1),gs=s("span",{style:{color:"#E1E4E8"}}," ",-1),Ts=s("span",{style:{color:"#9ECBFF"}},"download-genesis",-1),bs=s("span",{style:{color:"#E1E4E8"}}," ",-1),ms={style:{color:"#9ECBFF"}},Ss={class:"shiki github-light vp-code-light"},vs={class:"line"},ks=s("span",{style:{color:"#6F42C1"}},"celestia-appd",-1),Bs=s("span",{style:{color:"#24292E"}}," ",-1),As=s("span",{style:{color:"#032F62"}},"download-genesis",-1),fs=s("span",{style:{color:"#24292E"}}," ",-1),Ps={style:{color:"#032F62"}},qs={class:"language-bash vp-adaptive-theme"},Is=s("button",{title:"Copy Code",class:"copy"},null,-1),xs=s("span",{class:"lang"},"bash",-1),Rs={class:"shiki github-dark vp-code-dark"},Vs={class:"line"},Ds=s("span",{style:{color:"#B392F0"}},"celestia-appd",-1),ws=s("span",{style:{color:"#E1E4E8"}}," ",-1),Ns=s("span",{style:{color:"#9ECBFF"}},"download-genesis",-1),$s=s("span",{style:{color:"#E1E4E8"}}," ",-1),Os={style:{color:"#9ECBFF"}},Ms={class:"shiki github-light vp-code-light"},Hs={class:"line"},Ls=s("span",{style:{color:"#6F42C1"}},"celestia-appd",-1),Qs=s("span",{style:{color:"#24292E"}}," ",-1),js=s("span",{style:{color:"#032F62"}},"download-genesis",-1),Us=s("span",{style:{color:"#24292E"}}," ",-1),zs={style:{color:"#032F62"}},Xs=s("p",null,[a("Set seeds in the "),s("code",null,"$HOME/.celestia-app/config/config.toml"),a(" file:")],-1),Gs={class:"vp-code-group vp-adaptive-theme"},Ks=o('<div class="tabs"><input type="radio" name="group-bTncf" id="tab--jhVURT" checked="checked"><label for="tab--jhVURT">Mainnet Beta</label><input type="radio" name="group-bTncf" id="tab-jRt30GQ"><label for="tab-jRt30GQ">Mocha</label><input type="radio" name="group-bTncf" id="tab-9DEHBt1"><label for="tab-9DEHBt1">Arabica</label></div>',1),Ws={class:"blocks"},Zs={class:"language-bash vp-adaptive-theme active"},Ys=s("button",{title:"Copy Code",class:"copy"},null,-1),Js=s("span",{class:"lang"},"bash",-1),so={class:"shiki github-dark vp-code-dark"},oo={class:"line"},ao=o('<span style="color:#E1E4E8;">SEEDS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span>',6),eo={style:{color:"#9ECBFF"}},no=s("span",{style:{color:"#F97583"}},"|",-1),to=s("span",{style:{color:"#9ECBFF"}}," ",-1),lo=s("span",{style:{color:"#B392F0"}},"tr",-1),po=s("span",{style:{color:"#9ECBFF"}}," '\\n' ',')",-1),co=s("span",{class:"line"},[s("span",{style:{color:"#79B8FF"}},"echo"),s("span",{style:{color:"#E1E4E8"}}," $SEEDS")],-1),ro=o('<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^seeds *=.*/seeds = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$SEEDS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>',1),io={class:"shiki github-light vp-code-light"},_o={class:"line"},yo=o('<span style="color:#24292E;">SEEDS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span>',6),ho={style:{color:"#032F62"}},Eo=s("span",{style:{color:"#D73A49"}},"|",-1),uo=s("span",{style:{color:"#032F62"}}," ",-1),Fo=s("span",{style:{color:"#6F42C1"}},"tr",-1),Co=s("span",{style:{color:"#032F62"}}," '\\n' ',')",-1),go=s("span",{class:"line"},[s("span",{style:{color:"#005CC5"}},"echo"),s("span",{style:{color:"#24292E"}}," $SEEDS")],-1),To=o('<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^seeds *=.*/seeds = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$SEEDS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>',1),bo={class:"language-bash vp-adaptive-theme"},mo=s("button",{title:"Copy Code",class:"copy"},null,-1),So=s("span",{class:"lang"},"bash",-1),vo={class:"shiki github-dark vp-code-dark"},ko={class:"line"},Bo=o('<span style="color:#E1E4E8;">SEEDS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span>',6),Ao={style:{color:"#9ECBFF"}},fo=s("span",{style:{color:"#F97583"}},"|",-1),Po=s("span",{style:{color:"#9ECBFF"}}," ",-1),qo=s("span",{style:{color:"#B392F0"}},"tr",-1),Io=s("span",{style:{color:"#9ECBFF"}}," '\\n' ',')",-1),xo=s("span",{class:"line"},[s("span",{style:{color:"#79B8FF"}},"echo"),s("span",{style:{color:"#E1E4E8"}}," $SEEDS")],-1),Ro=o('<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^seeds *=.*/seeds = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$SEEDS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>',1),Vo={class:"shiki github-light vp-code-light"},Do={class:"line"},wo=o('<span style="color:#24292E;">SEEDS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span>',6),No={style:{color:"#032F62"}},$o=s("span",{style:{color:"#D73A49"}},"|",-1),Oo=s("span",{style:{color:"#032F62"}}," ",-1),Mo=s("span",{style:{color:"#6F42C1"}},"tr",-1),Ho=s("span",{style:{color:"#032F62"}}," '\\n' ',')",-1),Lo=s("span",{class:"line"},[s("span",{style:{color:"#005CC5"}},"echo"),s("span",{style:{color:"#24292E"}}," $SEEDS")],-1),Qo=o('<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^seeds *=.*/seeds = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$SEEDS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>',1),jo=o(`<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># For Arabica, you can set seeds manually in the</span></span>
<span class="line"><span style="color:#6A737D;"># \`$HOME/.celestia-app/config/config.toml\` file:</span></span>
<span class="line"><span style="color:#6A737D;"># Comma separated list of seed nodes to connect to</span></span>
<span class="line"><span style="color:#B392F0;">seeds</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># For Arabica, you can set seeds manually in the</span></span>
<span class="line"><span style="color:#6A737D;"># \`$HOME/.celestia-app/config/config.toml\` file:</span></span>
<span class="line"><span style="color:#6A737D;"># Comma separated list of seed nodes to connect to</span></span>
<span class="line"><span style="color:#6F42C1;">seeds</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span></code></pre></div>`,1),Uo=o('<summary>Optional: Set persistent peers</summary><p>Optionally, you can set persistent peers in your <code>config.toml</code> file. If you set persistent peers, your node will <strong>always</strong> try to connect to these peers. This is useful when running a local devnet, for example, when you would always want to connect to the same local nodes in your devnet. In production, setting persistent peers is advised only if you are running a <a href="https://hub.cosmos.network/main/validators/security.html#sentry-nodes-ddos-protection" target="_blank" rel="noreferrer">sentry node</a>.</p><p>You can get the persistent peers from the <a href="https://github.com/cosmos/chain-registry" target="_blank" rel="noreferrer">@cosmos/chain-registry</a> repository (for Mainnet Beta) or <a href="https://github.com/celestiaorg/networks" target="_blank" rel="noreferrer">@celestiaorg/networks repository</a> repo (for Mocha and Arabica) with the following commands:</p>',3),zo={class:"vp-code-group vp-adaptive-theme"},Xo=o('<div class="tabs"><input type="radio" name="group-a9_kE" id="tab-lXKmKxD" checked="checked"><label for="tab-lXKmKxD">Mainnet Beta</label><input type="radio" name="group-a9_kE" id="tab-0kTAdI6"><label for="tab-0kTAdI6">Mocha</label><input type="radio" name="group-a9_kE" id="tab-fbmLQ15"><label for="tab-fbmLQ15">Arabica</label></div>',1),Go={class:"blocks"},Ko={class:"language-bash vp-adaptive-theme active"},Wo=s("button",{title:"Copy Code",class:"copy"},null,-1),Zo=s("span",{class:"lang"},"bash",-1),Yo={class:"shiki github-dark vp-code-dark"},Jo={class:"line"},sa=o('<span style="color:#E1E4E8;">PERSISTENT_PEERS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-s</span>',6),oa={style:{color:"#9ECBFF"}},aa=o('<span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">jq</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#9ECBFF;"> &#39;.peers.persistent_peers[].address&#39; </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">tr</span><span style="color:#9ECBFF;"> &#39;\\n&#39; &#39;,&#39; </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">sed</span><span style="color:#9ECBFF;"> &#39;s/,$/\\n/&#39;)</span>',14),ea=s("span",{class:"line"},[s("span",{style:{color:"#79B8FF"}},"echo"),s("span",{style:{color:"#E1E4E8"}}," $PERSISTENT_PEERS")],-1),na=o('<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$PERSISTENT_PEERS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>',1),ta={class:"shiki github-light vp-code-light"},la={class:"line"},pa=o('<span style="color:#24292E;">PERSISTENT_PEERS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-s</span>',6),ca={style:{color:"#032F62"}},ra=o('<span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">jq</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-r</span><span style="color:#032F62;"> &#39;.peers.persistent_peers[].address&#39; </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">tr</span><span style="color:#032F62;"> &#39;\\n&#39; &#39;,&#39; </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">sed</span><span style="color:#032F62;"> &#39;s/,$/\\n/&#39;)</span>',14),ia=s("span",{class:"line"},[s("span",{style:{color:"#005CC5"}},"echo"),s("span",{style:{color:"#24292E"}}," $PERSISTENT_PEERS")],-1),da=o('<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$PERSISTENT_PEERS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>',1),_a={class:"language-bash vp-adaptive-theme"},ya=s("button",{title:"Copy Code",class:"copy"},null,-1),ha=s("span",{class:"lang"},"bash",-1),Ea={class:"shiki github-dark vp-code-dark"},ua={class:"line"},Fa=o('<span style="color:#E1E4E8;">PERSISTENT_PEERS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span>',6),Ca={style:{color:"#9ECBFF"}},ga=s("span",{style:{color:"#F97583"}},"|",-1),Ta=s("span",{style:{color:"#9ECBFF"}}," ",-1),ba=s("span",{style:{color:"#B392F0"}},"tr",-1),ma=s("span",{style:{color:"#9ECBFF"}}," '\\n' ',')",-1),Sa=s("span",{class:"line"},[s("span",{style:{color:"#79B8FF"}},"echo"),s("span",{style:{color:"#E1E4E8"}}," $PERSISTENT_PEERS")],-1),va=o('<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$PERSISTENT_PEERS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>',1),ka={class:"shiki github-light vp-code-light"},Ba={class:"line"},Aa=o('<span style="color:#24292E;">PERSISTENT_PEERS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span>',6),fa={style:{color:"#032F62"}},Pa=s("span",{style:{color:"#D73A49"}},"|",-1),qa=s("span",{style:{color:"#032F62"}}," ",-1),Ia=s("span",{style:{color:"#6F42C1"}},"tr",-1),xa=s("span",{style:{color:"#032F62"}}," '\\n' ',')",-1),Ra=s("span",{class:"line"},[s("span",{style:{color:"#005CC5"}},"echo"),s("span",{style:{color:"#24292E"}}," $PERSISTENT_PEERS")],-1),Va=o('<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$PERSISTENT_PEERS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>',1),Da={class:"language-bash vp-adaptive-theme"},wa=s("button",{title:"Copy Code",class:"copy"},null,-1),Na=s("span",{class:"lang"},"bash",-1),$a={class:"shiki github-dark vp-code-dark"},Oa={class:"line"},Ma=o('<span style="color:#E1E4E8;">PERSISTENT_PEERS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span>',6),Ha={style:{color:"#9ECBFF"}},La=s("span",{style:{color:"#F97583"}},"|",-1),Qa=s("span",{style:{color:"#9ECBFF"}}," ",-1),ja=s("span",{style:{color:"#B392F0"}},"tr",-1),Ua=s("span",{style:{color:"#9ECBFF"}}," '\\n' ',')",-1),za=s("span",{class:"line"},[s("span",{style:{color:"#79B8FF"}},"echo"),s("span",{style:{color:"#E1E4E8"}}," $PERSISTENT_PEERS")],-1),Xa=o('<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$PERSISTENT_PEERS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>',1),Ga={class:"shiki github-light vp-code-light"},Ka={class:"line"},Wa=o('<span style="color:#24292E;">PERSISTENT_PEERS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span>',6),Za={style:{color:"#032F62"}},Ya=s("span",{style:{color:"#D73A49"}},"|",-1),Ja=s("span",{style:{color:"#032F62"}}," ",-1),se=s("span",{style:{color:"#6F42C1"}},"tr",-1),oe=s("span",{style:{color:"#032F62"}}," '\\n' ',')",-1),ae=s("span",{class:"line"},[s("span",{style:{color:"#005CC5"}},"echo"),s("span",{style:{color:"#24292E"}}," $PERSISTENT_PEERS")],-1),ee=o('<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$PERSISTENT_PEERS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>',1),ne=o(`<h2 id="storage-and-pruning-configurations" tabindex="-1">Storage and pruning configurations <a class="header-anchor" href="#storage-and-pruning-configurations" aria-label="Permalink to &quot;Storage and pruning configurations&quot;">​</a></h2><h3 id="optional-connect-a-consensus-node-to-a-bridge-node" tabindex="-1">Optional: Connect a consensus node to a bridge node <a class="header-anchor" href="#optional-connect-a-consensus-node-to-a-bridge-node" aria-label="Permalink to &quot;Optional: Connect a consensus node to a bridge node&quot;">​</a></h3><p>If your consensus node is being connected to a celestia-node bridge node, you will need to enable transaction indexing and retain all block data. This can be achieved with the following settings in your <code>config.toml</code>.</p><h4 id="enable-transaction-indexing" tabindex="-1">Enable transaction indexing <a class="header-anchor" href="#enable-transaction-indexing" aria-label="Permalink to &quot;Enable transaction indexing&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">indexer = </span><span style="color:#9ECBFF;">&quot;kv&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">indexer = </span><span style="color:#032F62;">&quot;kv&quot;</span></span></code></pre></div><h4 id="retain-all-block-data" tabindex="-1">Retain all block data <a class="header-anchor" href="#retain-all-block-data" aria-label="Permalink to &quot;Retain all block data&quot;">​</a></h4><p>And in your <code>app.toml</code>, <code>min-retain-blocks</code> should remain as the default setting of <code>0</code>:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">min-retain-blocks = </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># retain all block data, this is default setting</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">min-retain-blocks = </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># retain all block data, this is default setting</span></span></code></pre></div><h3 id="query-transactions-by-hash" tabindex="-1">Query transactions by hash <a class="header-anchor" href="#query-transactions-by-hash" aria-label="Permalink to &quot;Query transactions by hash&quot;">​</a></h3><p>To query transactions using their hash, transaction indexing must be turned on. Set the <code>indexer</code> to <code>&quot;kv&quot;</code> in your <code>config.toml</code>:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">indexer = </span><span style="color:#9ECBFF;">&quot;kv&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">indexer = </span><span style="color:#032F62;">&quot;kv&quot;</span></span></code></pre></div><h3 id="optional-access-historical-state" tabindex="-1">Optional: Access historical state <a class="header-anchor" href="#optional-access-historical-state" aria-label="Permalink to &quot;Optional: Access historical state&quot;">​</a></h3><p>If you want to query the historical state — for example, you might want to know the balance of a Celestia wallet at a given height in the past — you should run an archive node with <code>pruning = &quot;nothing&quot;</code> in your <code>app.toml</code>. Note that this configuration is resource-intensive and will require significant storage:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pruning = </span><span style="color:#9ECBFF;">&quot;nothing&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pruning = </span><span style="color:#032F62;">&quot;nothing&quot;</span></span></code></pre></div><h3 id="save-on-storage-requirements" tabindex="-1">Save on storage requirements <a class="header-anchor" href="#save-on-storage-requirements" aria-label="Permalink to &quot;Save on storage requirements&quot;">​</a></h3><p>If you want to save on storage requirements, consider using <code>pruning = &quot;everything&quot;</code> in your <code>app.toml</code> to prune everything. If you select <code>&quot;everything&quot;</code> or <code>&quot;default&quot;</code>, but still want to keep the block data, you can do so by not changing the default value of <code>min-retain-blocks = 0</code> in your <code>app.toml</code>. A value of <code>0</code> for <code>min-retain-blocks</code> will keep all block data. This will prune snapshots of the state, but it will keep block data:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pruning = </span><span style="color:#9ECBFF;">&quot;everything&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">min-retain-blocks = </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># this is the default setting</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pruning = </span><span style="color:#032F62;">&quot;everything&quot;</span></span>
<span class="line"><span style="color:#24292E;">min-retain-blocks = </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># this is the default setting</span></span></code></pre></div><h2 id="sync-types" tabindex="-1">Sync types <a class="header-anchor" href="#sync-types" aria-label="Permalink to &quot;Sync types&quot;">​</a></h2><table><thead><tr><th>Sync mode</th><th>Time</th><th>Notes</th></tr></thead><tbody><tr><td>Block sync</td><td>~3 weeks</td><td>Downloads and executes all blocks from genesis to the tip</td></tr><tr><td>State sync</td><td>~1 hour</td><td>Downloads a snapshot of the state then downloads and executes all blocks after that snapshot to the tip.</td></tr><tr><td>Quick sync</td><td>~5 hours</td><td>Downloads the data directory from a node. Time depends on your download speed because the data being downloaded can exceed 1 TB for mainnet.</td></tr></tbody></table><h3 id="option-1-block-sync" tabindex="-1">Option 1: Block sync <a class="header-anchor" href="#option-1-block-sync" aria-label="Permalink to &quot;Option 1: Block sync&quot;">​</a></h3><p>By default, a consensus node will sync using block sync; which will request, validate and execute every block up to the head of the blockchain. This is the most secure mechanism yet the slowest (taking up to weeks depending on the height of the blockchain).</p><p>There are two alternatives for quicker syncing.</p><h3 id="option-2-state-sync" tabindex="-1">Option 2: State sync <a class="header-anchor" href="#option-2-state-sync" aria-label="Permalink to &quot;Option 2: State sync&quot;">​</a></h3><p>State sync uses light client verification to verify state snapshots from peers and then apply them. State sync relies on weak subjectivity; a trusted header (specifically the hash and height) must be provided. This can be found by querying a trusted RPC endpoint (/block). RPC endpoints are also required for retrieving light blocks. These can be found in the docs here under the respective networks or from <a href="https://github.com/cosmos/chain-registry" target="_blank" rel="noreferrer">the chain-registry</a>.</p><p>In <code>$HOME/.celestia-app/config/config.toml</code>, set</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">rpc_servers = </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">trust_height = </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">trust_hash = </span><span style="color:#9ECBFF;">&quot;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">rpc_servers = </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">trust_height = </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">trust_hash = </span><span style="color:#032F62;">&quot;&quot;</span></span></code></pre></div><p>And also set statesync to <code>true</code>:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#######################################################</span></span>
<span class="line"><span style="color:#6A737D;">###         State Sync Configuration Options        ###</span></span>
<span class="line"><span style="color:#6A737D;">#######################################################</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">statesync</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">enable = </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#######################################################</span></span>
<span class="line"><span style="color:#6A737D;">###         State Sync Configuration Options        ###</span></span>
<span class="line"><span style="color:#6A737D;">#######################################################</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">statesync</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">enable = </span><span style="color:#005CC5;">true</span></span></code></pre></div><p>To their respective fields. At least two different rpc endpoints should be provided. The more, the greater the chance of detecting any fraudulent behavior.</p><p>Once setup, you should be ready to start the node as normal. In the logs, you should see: <code>Discovering snapshots</code>. This may take a few minutes before snapshots are found depending on the network topology.</p><h3 id="option-3-quick-sync" tabindex="-1">Option 3: Quick sync <a class="header-anchor" href="#option-3-quick-sync" aria-label="Permalink to &quot;Option 3: Quick sync&quot;">​</a></h3><p>Quick sync effectively downloads the entire <code>data</code> directory from a third-party provider meaning the node has all the application and blockchain state as the node it was copied from.</p><p>Run the following command to quick-sync from a snapshot:</p>`,33),te={class:"vp-code-group vp-adaptive-theme"},le=o('<div class="tabs"><input type="radio" name="group-PekIn" id="tab-BLRBgzC" checked="checked"><label for="tab-BLRBgzC">Mainnet Beta</label><input type="radio" name="group-PekIn" id="tab-QzsNqrR"><label for="tab-QzsNqrR">Mocha</label><input type="radio" name="group-PekIn" id="tab-P4FyRxN"><label for="tab-P4FyRxN">Arabica</label></div>',1),pe={class:"blocks"},ce={class:"language-bash vp-adaptive-theme active"},re=s("button",{title:"Copy Code",class:"copy"},null,-1),ie=s("span",{class:"lang"},"bash",-1),de={class:"shiki github-dark vp-code-dark"},_e=s("span",{class:"line"},[s("span",{style:{color:"#79B8FF"}},"cd"),s("span",{style:{color:"#E1E4E8"}}," $HOME")],-1),ye=o('<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>',1),he=o('<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>',1),Ee=o('<span class="line"><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#9ECBFF;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">\\</span></span>',1),ue={class:"line"},Fe=s("span",{style:{color:"#9ECBFF"}},"    ",-1),Ce=s("span",{style:{color:"#B392F0"}},"egrep",-1),ge=s("span",{style:{color:"#9ECBFF"}}," ",-1),Te=s("span",{style:{color:"#79B8FF"}},"-o",-1),be={style:{color:"#9ECBFF"}},me=o('<span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">tr</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#9ECBFF;"> &quot;&gt;&quot;)</span>',6),Se=o('<span class="line"><span style="color:#B392F0;">aria2c</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-x</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://snaps.qubelabs.io/celestia/${</span><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#9ECBFF;">}&quot;</span></span>',1),ve=o('<span class="line"><span style="color:#B392F0;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data/</span></span>',1),ke={class:"shiki github-light vp-code-light"},Be=s("span",{class:"line"},[s("span",{style:{color:"#005CC5"}},"cd"),s("span",{style:{color:"#24292E"}}," $HOME")],-1),Ae=o('<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>',1),fe=o('<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>',1),Pe=o('<span class="line"><span style="color:#24292E;">SNAP_NAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-s</span><span style="color:#032F62;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">\\</span></span>',1),qe={class:"line"},Ie=s("span",{style:{color:"#032F62"}},"    ",-1),xe=s("span",{style:{color:"#6F42C1"}},"egrep",-1),Re=s("span",{style:{color:"#032F62"}}," ",-1),Ve=s("span",{style:{color:"#005CC5"}},"-o",-1),De={style:{color:"#032F62"}},we=o('<span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">tr</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-d</span><span style="color:#032F62;"> &quot;&gt;&quot;)</span>',6),Ne=o('<span class="line"><span style="color:#6F42C1;">aria2c</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-x</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://snaps.qubelabs.io/celestia/${</span><span style="color:#24292E;">SNAP_NAME</span><span style="color:#032F62;">}&quot;</span></span>',1),$e=o('<span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data/</span></span>',1),Oe={class:"language-bash vp-adaptive-theme"},Me=s("button",{title:"Copy Code",class:"copy"},null,-1),He=s("span",{class:"lang"},"bash",-1),Le={class:"shiki github-dark vp-code-dark"},Qe=s("span",{class:"line"},[s("span",{style:{color:"#79B8FF"}},"cd"),s("span",{style:{color:"#E1E4E8"}}," $HOME")],-1),je=o('<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>',1),Ue=o('<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>',1),ze=o('<span class="line"><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#9ECBFF;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">\\</span></span>',1),Xe={class:"line"},Ge=s("span",{style:{color:"#9ECBFF"}},"    ",-1),Ke=s("span",{style:{color:"#B392F0"}},"egrep",-1),We=s("span",{style:{color:"#9ECBFF"}}," ",-1),Ze=s("span",{style:{color:"#79B8FF"}},"-o",-1),Ye={style:{color:"#9ECBFF"}},Je=o('<span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">tr</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#9ECBFF;"> &quot;&gt;&quot;)</span>',6),sn=o('<span class="line"><span style="color:#B392F0;">aria2c</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-x</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://snaps.qubelabs.io/celestia/${</span><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#9ECBFF;">}&quot;</span></span>',1),on=o('<span class="line"><span style="color:#B392F0;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data/</span></span>',1),an={class:"shiki github-light vp-code-light"},en=s("span",{class:"line"},[s("span",{style:{color:"#005CC5"}},"cd"),s("span",{style:{color:"#24292E"}}," $HOME")],-1),nn=o('<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>',1),tn=o('<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>',1),ln=o('<span class="line"><span style="color:#24292E;">SNAP_NAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-s</span><span style="color:#032F62;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">\\</span></span>',1),pn={class:"line"},cn=s("span",{style:{color:"#032F62"}},"    ",-1),rn=s("span",{style:{color:"#6F42C1"}},"egrep",-1),dn=s("span",{style:{color:"#032F62"}}," ",-1),_n=s("span",{style:{color:"#005CC5"}},"-o",-1),yn={style:{color:"#032F62"}},hn=o('<span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">tr</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-d</span><span style="color:#032F62;"> &quot;&gt;&quot;)</span>',6),En=o('<span class="line"><span style="color:#6F42C1;">aria2c</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-x</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://snaps.qubelabs.io/celestia/${</span><span style="color:#24292E;">SNAP_NAME</span><span style="color:#032F62;">}&quot;</span></span>',1),un=o('<span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data/</span></span>',1),Fn={class:"language-bash vp-adaptive-theme"},Cn=s("button",{title:"Copy Code",class:"copy"},null,-1),gn=s("span",{class:"lang"},"bash",-1),Tn={class:"shiki github-dark vp-code-dark"},bn=s("span",{class:"line"},[s("span",{style:{color:"#79B8FF"}},"cd"),s("span",{style:{color:"#E1E4E8"}}," $HOME")],-1),mn=o('<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>',1),Sn=o('<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>',1),vn=o('<span class="line"><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#9ECBFF;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">\\</span></span>',1),kn={class:"line"},Bn=s("span",{style:{color:"#9ECBFF"}},"    ",-1),An=s("span",{style:{color:"#B392F0"}},"egrep",-1),fn=s("span",{style:{color:"#9ECBFF"}}," ",-1),Pn=s("span",{style:{color:"#79B8FF"}},"-o",-1),qn={style:{color:"#9ECBFF"}},In=o('<span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">tr</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#9ECBFF;"> &quot;&gt;&quot;)</span>',6),xn=o('<span class="line"><span style="color:#B392F0;">aria2c</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-x</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://snaps.qubelabs.io/celestia/${</span><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#9ECBFF;">}&quot;</span></span>',1),Rn=o('<span class="line"><span style="color:#B392F0;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data/</span></span>',1),Vn={class:"shiki github-light vp-code-light"},Dn=s("span",{class:"line"},[s("span",{style:{color:"#005CC5"}},"cd"),s("span",{style:{color:"#24292E"}}," $HOME")],-1),wn=o('<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>',1),Nn=o('<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>',1),$n=o('<span class="line"><span style="color:#24292E;">SNAP_NAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-s</span><span style="color:#032F62;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">\\</span></span>',1),On={class:"line"},Mn=s("span",{style:{color:"#032F62"}},"    ",-1),Hn=s("span",{style:{color:"#6F42C1"}},"egrep",-1),Ln=s("span",{style:{color:"#032F62"}}," ",-1),Qn=s("span",{style:{color:"#005CC5"}},"-o",-1),jn={style:{color:"#032F62"}},Un=o('<span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">tr</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-d</span><span style="color:#032F62;"> &quot;&gt;&quot;)</span>',6),zn=o('<span class="line"><span style="color:#6F42C1;">aria2c</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-x</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://snaps.qubelabs.io/celestia/${</span><span style="color:#24292E;">SNAP_NAME</span><span style="color:#032F62;">}&quot;</span></span>',1),Xn=o('<span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data/</span></span>',1),Gn=o('<h2 id="start-the-consensus-node" tabindex="-1">Start the consensus node <a class="header-anchor" href="#start-the-consensus-node" aria-label="Permalink to &quot;Start the consensus node&quot;">​</a></h2><p>If you are running celestia-app v1.x.x:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span></span></code></pre></div><p>If you are running celestia-app &gt;= v2.0.0: then you&#39;ll want to start the node with a <code>--v2-upgrade-height</code> that is dependent on the network. The <code>--v2-upgrade-height</code> flag is only needed during the v2 upgrade height so after your node has executed the upgrade (e.g. you see the log <code>upgraded from app version 1 to 2</code>), you don&#39;t need to provide this flag for future <code>celestia-appd start</code> invocations.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-NVsn2" id="tab-LgwZgdb" checked="checked"><label for="tab-LgwZgdb">Mainnet Beta</label><input type="radio" name="group-NVsn2" id="tab-l8NTXAv"><label for="tab-l8NTXAv">Mocha</label><input type="radio" name="group-NVsn2" id="tab-wD-Djlr"><label for="tab-wD-Djlr">Arabica</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--v2-upgrade-height</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2371495</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--v2-upgrade-height</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2371495</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--v2-upgrade-height</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2585031</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--v2-upgrade-height</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2585031</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--v2-upgrade-height</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1751707</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--v2-upgrade-height</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1751707</span></span></code></pre></div></div></div><p>Optional: If you would like celestia-app to run as a background process, you can follow the <a href="./systemd">SystemD tutorial</a>.</p><h2 id="extra-resources-for-consensus-nodes" tabindex="-1">Extra resources for consensus nodes <a class="header-anchor" href="#extra-resources-for-consensus-nodes" aria-label="Permalink to &quot;Extra resources for consensus nodes&quot;">​</a></h2><h3 id="optional-reset-network" tabindex="-1">Optional: Reset network <a class="header-anchor" href="#optional-reset-network" aria-label="Permalink to &quot;Optional: Reset network&quot;">​</a></h3><p>This will delete all data folders so we can start fresh:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tendermint</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">unsafe-reset-all</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--home</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tendermint</span><span style="color:#24292E;"> </span><span style="color:#032F62;">unsafe-reset-all</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--home</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app</span></span></code></pre></div><h3 id="optional-configure-an-rpc-endpoint" tabindex="-1">Optional: Configure an RPC endpoint <a class="header-anchor" href="#optional-configure-an-rpc-endpoint" aria-label="Permalink to &quot;Optional: Configure an RPC endpoint&quot;">​</a></h3><p>You can configure your consensus node to be a public RPC endpoint. This allows it to accept connections from data availability nodes and serve requests for the data availability API.</p><h4 id="expose-rpc" tabindex="-1">Expose RPC <a class="header-anchor" href="#expose-rpc" aria-label="Permalink to &quot;Expose RPC&quot;">​</a></h4><p>By default, the RPC service listens on <code>localhost</code> which means it can&#39;t be accessed from other machines. To make the RPC service available publicly, you need to bind it to a public IP or <code>0.0.0.0</code> (which means listening on all available network interfaces).</p><p>You can do this by editing the config.toml file:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;s#&quot;tcp://127.0.0.1:26657&quot;#&quot;tcp://0.0.0.0:26657&quot;#g&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/config/config.toml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;s#&quot;tcp://127.0.0.1:26657&quot;#&quot;tcp://0.0.0.0:26657&quot;#g&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/config/config.toml</span></span></code></pre></div><p>This command replaces the <code>localhost</code> IP address with <code>0.0.0.0</code>, making the RPC service listen on all available network interfaces.</p><h4 id="note-on-external-address" tabindex="-1">Note on <code>external-address</code> <a class="header-anchor" href="#note-on-external-address" aria-label="Permalink to &quot;Note on `external-address`&quot;">​</a></h4><p>The <code>external-address</code> field in the configuration is used when your node is behind a NAT and you need to advertise a different address for peers to dial. Populating this field is not necessary for making the RPC endpoint public.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">EXTERNAL-ADDRESS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">wget</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-qO-</span><span style="color:#9ECBFF;"> eth0.me)</span></span>\n<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^external-address = &quot;&quot;/external-address = &quot;</span><span style="color:#E1E4E8;">$EXTERNAL</span><span style="color:#9ECBFF;">-ADDRESS:26656&quot;/&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">EXTERNAL-ADDRESS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">wget</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-qO-</span><span style="color:#032F62;"> eth0.me)</span></span>\n<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^external-address = &quot;&quot;/external-address = &quot;</span><span style="color:#24292E;">$EXTERNAL</span><span style="color:#032F62;">-ADDRESS:26656&quot;/&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span></code></pre></div><h4 id="restart-the-node" tabindex="-1">Restart the node <a class="header-anchor" href="#restart-the-node" aria-label="Permalink to &quot;Restart the node&quot;">​</a></h4><p>After making these changes, restart <code>celestia-appd</code> to load the new configurations.</p><h3 id="optional-transaction-indexer-configuration-options" tabindex="-1">Optional: Transaction indexer configuration options <a class="header-anchor" href="#optional-transaction-indexer-configuration-options" aria-label="Permalink to &quot;Optional: Transaction indexer configuration options&quot;">​</a></h3><p>This section guides you on how to configure your <code>config.toml</code> file in <code>celestia-app</code> to select which transactions to index. Depending on the application&#39;s configuration, a node operator may decide which transactions to index.</p><p>The available options are:</p><ol><li><code>null</code>: This option disables indexing. If you don&#39;t need to query transactions, you can choose this option to save space.</li><li><code>kv</code> (default): This is the simplest indexer, backed by key-value storage (defaults to levelDB; see DBBackend). When <code>kv</code> is chosen, <code>tx.height</code> and <code>tx.hash</code> will always be indexed. This option is suitable for basic queries on transactions.</li><li><code>psql</code>: This indexer is backed by PostgreSQL. When psql is chosen, <code>tx.height</code> and <code>tx.hash</code> will always be indexed. This option is suitable for complex queries on transactions.</li></ol><p>An example to set the value to <code>kv</code> in <code>config.toml</code> is:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">indexer = </span><span style="color:#9ECBFF;">&quot;kv&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">indexer = </span><span style="color:#032F62;">&quot;kv&quot;</span></span></code></pre></div><p>Remember to restart <code>celestia-appd</code> after making changes to the configuration to load the new settings.</p><h3 id="optional-discard-abci-responses-configuration" tabindex="-1">Optional: Discard ABCI responses configuration <a class="header-anchor" href="#optional-discard-abci-responses-configuration" aria-label="Permalink to &quot;Optional: Discard ABCI responses configuration&quot;">​</a></h3><p>This section will guide you on how to configure your <code>config.toml</code> file in <code>celestia-app</code> to manage the storage of ABCI responses. ABCI responses are the results of executing transactions and are used for <code>/block_results</code> RPC queries and to reindex events in the command-line tool.</p><p>The <code>discard_abci_responses</code> option allows you to control whether these responses are persisted in the state store:</p><ul><li><code>false</code> (default): ABCI responses are stored in the state store. This ensures that ABCI responses are available for <code>/block_results</code> RPC queries and for reindexing events. However, it can consume a significant amount of disk space.</li><li><code>true</code>: ABCI responses are not stored in the state store. This can save a considerable amount of disk space, but <code>/block_results</code> RPC queries and event reindexing will not be available.</li></ul><p>An example to set the value to false in <code>config.toml</code> is:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">discard_abci_responses = </span><span style="color:#79B8FF;">false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">discard_abci_responses = </span><span style="color:#005CC5;">false</span></span></code></pre></div><p>Remember to restart <code>celestia-appd</code> after making changes to the configuration to load the new settings.</p><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><h3 id="_2-3-committed-an-invalid-block-wrong-block-header-version" tabindex="-1"><code>+2/3 committed an invalid block: wrong Block.Header.Version</code> <a class="header-anchor" href="#_2-3-committed-an-invalid-block-wrong-block-header-version" aria-label="Permalink to &quot;`+2/3 committed an invalid block: wrong Block.Header.Version`&quot;">​</a></h3><p>If you encounter an error like:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">2024-04-25</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">14</span><span style="color:#9ECBFF;">:48:24</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#9ECBFF;">:48PM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ERR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">CONSENSUS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">FAILURE!!!</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">err=&quot;+2/3 committed an invalid block: wrong Block.Header.Version. Expected {11 1}, got {11 2}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">module=consensus</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stack=&quot;goroutine 214 [running]:\\nruntime/debug.Stack()\\n\\t/usr/local/go/src/runtime/debug/stack.go:24 +0x64\\ngithub.com/tendermint/tendermint/consensus.(*State).receiveRoutine.func2()\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:746 +0x44\\npanic({0x1b91180?, 0x400153b240?})\\n\\t/usr/local/go/src/runtime/panic.go:770 +0x124\\ngithub.com/tendermint/tendermint/consensus.(*State).finalizeCommit(0x400065ea88, 0x3)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:1637 +0xd30\\ngithub.com/tendermint/tendermint/consensus.(*State).tryFinalizeCommit(0x400065ea88, 0x3)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:1606 +0x26c\\ngithub.com/tendermint/tendermint/consensus.(*State).handleCompleteProposal(0x400065ea88, 0x3)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:2001 +0x2d8\\ngithub.com/tendermint/tendermint/consensus.(*State).handleMsg(0x400065ea88, {{0x2b30a00, 0x400143e048}, {0x40002a61b0, 0x28}})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:856 +0x1c8\\ngithub.com/tendermint/tendermint/consensus.(*State).receiveRoutine(0x400065ea88, 0x0)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:782 +0x2c4\\ncreated by github.com/tendermint/tendermint/consensus.(*State).OnStart in goroutine 169\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:391 +0x110\\n&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">2024-04-25</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span><span style="color:#032F62;">:48:24</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#032F62;">:48PM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ERR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">CONSENSUS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">FAILURE!!!</span><span style="color:#24292E;"> </span><span style="color:#032F62;">err=&quot;+2/3 committed an invalid block: wrong Block.Header.Version. Expected {11 1}, got {11 2}&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">module=consensus</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stack=&quot;goroutine 214 [running]:\\nruntime/debug.Stack()\\n\\t/usr/local/go/src/runtime/debug/stack.go:24 +0x64\\ngithub.com/tendermint/tendermint/consensus.(*State).receiveRoutine.func2()\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:746 +0x44\\npanic({0x1b91180?, 0x400153b240?})\\n\\t/usr/local/go/src/runtime/panic.go:770 +0x124\\ngithub.com/tendermint/tendermint/consensus.(*State).finalizeCommit(0x400065ea88, 0x3)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:1637 +0xd30\\ngithub.com/tendermint/tendermint/consensus.(*State).tryFinalizeCommit(0x400065ea88, 0x3)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:1606 +0x26c\\ngithub.com/tendermint/tendermint/consensus.(*State).handleCompleteProposal(0x400065ea88, 0x3)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:2001 +0x2d8\\ngithub.com/tendermint/tendermint/consensus.(*State).handleMsg(0x400065ea88, {{0x2b30a00, 0x400143e048}, {0x40002a61b0, 0x28}})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:856 +0x1c8\\ngithub.com/tendermint/tendermint/consensus.(*State).receiveRoutine(0x400065ea88, 0x0)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:782 +0x2c4\\ncreated by github.com/tendermint/tendermint/consensus.(*State).OnStart in goroutine 169\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.35.0-tm-v0.34.29/consensus/state.go:391 +0x110\\n&quot;</span></span></code></pre></div><p>then it is likely that the network has upgraded to a new app version but your consensus node was not prepared for the upgrade. To fix this, you&#39;ll need to update your binary to the latest version and restart your node with the relevant <code>--v2-upgrade-height</code> for the network you&#39;re running on. If your node still can&#39;t sync to the tip of the chain after the above steps, consider a <code>celestia-appd tendermint reset-state</code> to reset your node and start syncing from the genesis block.</p>',41),ot=JSON.parse('{"title":"Consensus node","description":"Learn how to set up a Celestia consensus node.","frontmatter":{"description":"Learn how to set up a Celestia consensus node.","outline":"deep","head":[["meta",{"name":"og:title","content":"Consensus node | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"nodes/consensus-node.md","filePath":"nodes/consensus-node.md","lastUpdated":1725963298000}'),Kn={name:"nodes/consensus-node.md"},at=Object.assign(Kn,{setup(Wn){return(Zn,Yn)=>(l(),p("div",null,[r,s("div",i,[d,s("div",_,[s("div",y,[h,E,s("pre",u,[s("code",null,[s("span",F,[C,s("span",g,n(t(e).mainnetChainId),1)])])]),s("pre",T,[s("code",null,[s("span",b,[m,s("span",S,n(t(e).mainnetChainId),1)])])])]),s("div",v,[k,B,s("pre",A,[s("code",null,[s("span",f,[P,s("span",q,n(t(e).mochaChainId),1)])])]),s("pre",I,[s("code",null,[s("span",x,[R,s("span",V,n(t(e).mochaChainId),1)])])])]),s("div",D,[w,N,s("pre",$,[s("code",null,[s("span",O,[M,s("span",H,n(t(e).arabicaChainId),1)])])]),s("pre",L,[s("code",null,[s("span",Q,[j,s("span",U,n(t(e).arabicaChainId),1)])])])])])]),z,s("div",X,[G,s("div",K,[s("div",W,[Z,Y,s("pre",J,[s("code",null,[s("span",ss,[os,as,es,ns,s("span",ts,n(t(e).mainnetChainId),1)])])]),s("pre",ls,[s("code",null,[s("span",ps,[cs,rs,is,ds,s("span",_s,n(t(e).mainnetChainId),1)])])])]),s("div",ys,[hs,Es,s("pre",us,[s("code",null,[s("span",Fs,[Cs,gs,Ts,bs,s("span",ms,n(t(e).mochaChainId),1)])])]),s("pre",Ss,[s("code",null,[s("span",vs,[ks,Bs,As,fs,s("span",Ps,n(t(e).mochaChainId),1)])])])]),s("div",qs,[Is,xs,s("pre",Rs,[s("code",null,[s("span",Vs,[Ds,ws,Ns,$s,s("span",Os,n(t(e).arabicaChainId),1)])])]),s("pre",Ms,[s("code",null,[s("span",Hs,[Ls,Qs,js,Us,s("span",zs,n(t(e).arabicaChainId),1)])])])])])]),Xs,s("div",Gs,[Ks,s("div",Ws,[s("div",Zs,[Ys,Js,s("pre",so,[s("code",null,[s("span",oo,[ao,s("span",eo," https://raw.githubusercontent.com/celestiaorg/networks/master/"+n(t(e).mainnetChainId)+"/seeds.txt ",1),no,to,lo,po]),a(`
`),co,a(`
`),ro])]),s("pre",io,[s("code",null,[s("span",_o,[yo,s("span",ho," https://raw.githubusercontent.com/celestiaorg/networks/master/"+n(t(e).mainnetChainId)+"/seeds.txt ",1),Eo,uo,Fo,Co]),a(`
`),go,a(`
`),To])])]),s("div",bo,[mo,So,s("pre",vo,[s("code",null,[s("span",ko,[Bo,s("span",Ao," https://raw.githubusercontent.com/celestiaorg/networks/master/"+n(t(e).mochaChainId)+"/seeds.txt ",1),fo,Po,qo,Io]),a(`
`),xo,a(`
`),Ro])]),s("pre",Vo,[s("code",null,[s("span",Do,[wo,s("span",No," https://raw.githubusercontent.com/celestiaorg/networks/master/"+n(t(e).mochaChainId)+"/seeds.txt ",1),$o,Oo,Mo,Ho]),a(`
`),Lo,a(`
`),Qo])])]),jo])]),s("details",null,[Uo,s("div",zo,[Xo,s("div",Go,[s("div",Ko,[Wo,Zo,s("pre",Yo,[s("code",null,[s("span",Jo,[sa,s("span",oa," https://raw.githubusercontent.com/cosmos/chain-registry/master/"+n(t(e).mainnetChainId)+"/chain.json ",1),aa]),a(`
`),ea,a(`
`),na])]),s("pre",ta,[s("code",null,[s("span",la,[pa,s("span",ca," https://raw.githubusercontent.com/cosmos/chain-registry/master/"+n(t(e).mainnetChainId)+"/chain.json ",1),ra]),a(`
`),ia,a(`
`),da])])]),s("div",_a,[ya,ha,s("pre",Ea,[s("code",null,[s("span",ua,[Fa,s("span",Ca," https://raw.githubusercontent.com/celestiaorg/networks/master/"+n(t(e).mochaChainId)+"/peers.txt ",1),ga,Ta,ba,ma]),a(`
`),Sa,a(`
`),va])]),s("pre",ka,[s("code",null,[s("span",Ba,[Aa,s("span",fa," https://raw.githubusercontent.com/celestiaorg/networks/master/"+n(t(e).mochaChainId)+"/peers.txt ",1),Pa,qa,Ia,xa]),a(`
`),Ra,a(`
`),Va])])]),s("div",Da,[wa,Na,s("pre",$a,[s("code",null,[s("span",Oa,[Ma,s("span",Ha," https://raw.githubusercontent.com/celestiaorg/networks/master/"+n(t(e).arabicaChainId)+"/peers.txt ",1),La,Qa,ja,Ua]),a(`
`),za,a(`
`),Xa])]),s("pre",Ga,[s("code",null,[s("span",Ka,[Wa,s("span",Za," https://raw.githubusercontent.com/celestiaorg/networks/master/"+n(t(e).arabicaChainId)+"/peers.txt ",1),Ya,Ja,se,oe]),a(`
`),ae,a(`
`),ee])])])])])]),ne,s("div",te,[le,s("div",pe,[s("div",ce,[re,ie,s("pre",de,[s("code",null,[_e,a(`
`),ye,a(`
`),he,a(`
`),Ee,a(`
`),s("span",ue,[Fe,Ce,ge,Te,s("span",be,' ">'+n(t(e).mainnetChainId)+'.*tar" ',1),me]),a(`
`),Se,a(`
`),ve])]),s("pre",ke,[s("code",null,[Be,a(`
`),Ae,a(`
`),fe,a(`
`),Pe,a(`
`),s("span",qe,[Ie,xe,Re,Ve,s("span",De,' ">'+n(t(e).mainnetChainId)+'.*tar" ',1),we]),a(`
`),Ne,a(`
`),$e])])]),s("div",Oe,[Me,He,s("pre",Le,[s("code",null,[Qe,a(`
`),je,a(`
`),Ue,a(`
`),ze,a(`
`),s("span",Xe,[Ge,Ke,We,Ze,s("span",Ye,' ">'+n(t(e).mochaChainId)+'.*tar" ',1),Je]),a(`
`),sn,a(`
`),on])]),s("pre",an,[s("code",null,[en,a(`
`),nn,a(`
`),tn,a(`
`),ln,a(`
`),s("span",pn,[cn,rn,dn,_n,s("span",yn,' ">'+n(t(e).mochaChainId)+'.*tar" ',1),hn]),a(`
`),En,a(`
`),un])])]),s("div",Fn,[Cn,gn,s("pre",Tn,[s("code",null,[bn,a(`
`),mn,a(`
`),Sn,a(`
`),vn,a(`
`),s("span",kn,[Bn,An,fn,Pn,s("span",qn,' ">'+n(t(e).arabicaChainId)+'.*tar" ',1),In]),a(`
`),xn,a(`
`),Rn])]),s("pre",Vn,[s("code",null,[Dn,a(`
`),wn,a(`
`),Nn,a(`
`),$n,a(`
`),s("span",On,[Mn,Hn,Ln,Qn,s("span",jn,' ">'+n(t(e).arabicaChainId)+'.*tar" ',1),Un]),a(`
`),zn,a(`
`),Xn])])])])]),Gn]))}});export{ot as __pageData,at as default};
