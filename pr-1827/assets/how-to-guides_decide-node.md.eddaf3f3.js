import{_ as e,o,c as n,Q as t}from"./chunks/framework.d4fd38e2.js";const f=JSON.parse('{"title":"Deciding which node to run","description":"Guide on helping you decide which type of node to run.","frontmatter":{"description":"Guide on helping you decide which type of node to run.","head":[["meta",{"property":"og:title","content":"Deciding which node to run | Celestia Docs"}],["meta",{"property":"og:description","content":"Guide on helping you decide which type of node to run."}]]},"headers":[],"relativePath":"how-to-guides/decide-node.md","filePath":"how-to-guides/decide-node.md","lastUpdated":1734367953000}'),a={name:"how-to-guides/decide-node.md"},i=t('<h1 id="deciding-which-node-to-run" tabindex="-1">Deciding which node to run <a class="header-anchor" href="#deciding-which-node-to-run" aria-label="Permalink to &quot;Deciding which node to run&quot;">​</a></h1><p>Now that you have installed the basic dependencies, you can start exploring which nodes to run!</p><h2 id="light-node" tabindex="-1">Light node <a class="header-anchor" href="#light-node" aria-label="Permalink to &quot;Light node&quot;">​</a></h2><p>It is highly recommended to get started with running a data availability <a href="./light-node">light node</a>.</p><p>You can also play around with the Data Availability API in <a href="./../tutorials/node-tutorial">this tutorial for posting and retrieving data with a light node</a>.</p><h3 id="other-da-nodes" tabindex="-1">Other DA nodes <a class="header-anchor" href="#other-da-nodes" aria-label="Permalink to &quot;Other DA nodes&quot;">​</a></h3><p>Depending on your use case, you also may want to run a <a href="./bridge-node">bridge node</a> or a <a href="./full-storage-node">full DA node</a>.</p><h2 id="consensus-node" tabindex="-1">Consensus node <a class="header-anchor" href="#consensus-node" aria-label="Permalink to &quot;Consensus node&quot;">​</a></h2><p>If you are looking to run a consensus node, please follow the <a href="./consensus-node">tutorial for running a consensus node</a>.</p><p>Note that running a validator means you must also run a bridge node, which is covered in <a href="./bridge-node">this section</a>.</p>',10),d=[i];function r(h,s,c,l,u,p){return o(),n("div",null,d)}const _=e(a,[["render",r]]);export{f as __pageData,_ as default};
