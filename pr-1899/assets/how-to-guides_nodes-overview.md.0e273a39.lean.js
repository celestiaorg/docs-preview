import{_,o as h,c,k as e,a as i,a3 as d,a4 as g,t as n,a5 as p,p as S,m as b,H as m,Q as v}from"./chunks/framework.b3007fd5.js";const M={name:"StorageCalculator",data(){return{selectedConfig:"8",retentionMonths:12}},computed:{blocksPerDay(){return 24*60*60/6},dailyStorage(){return this.blocksPerDay*parseInt(this.selectedConfig)},monthlyStorage(){return this.dailyStorage*30.44},monthlyStorageFormatted(){return`${(this.monthlyStorage/1048576).toFixed(2)} TiB`},retentionStorage(){return this.monthlyStorage*this.retentionMonths},lightNodeStorage(){return"100 GB SSD"},bridgeNodeStorage(){return this.selectedConfig==="8"?`${Math.max(5,Math.ceil(this.retentionStorage/1048576))} TiB NVME`:`${Math.max(20,Math.ceil(this.retentionStorage/1048576*4))} TiB NVME`},fullNodeStorage(){return this.selectedConfig==="8"?`${Math.max(5,Math.ceil(this.retentionStorage/1048576))} TiB NVME`:`${Math.max(20,Math.ceil(this.retentionStorage/1048576*4))} TiB NVME`},validatorStorage(){return this.selectedConfig==="8"?`${Math.max(3,Math.ceil(this.retentionStorage/1048576))} TiB NVME`:`${Math.max(12,Math.ceil(this.retentionStorage/1048576*4))} TiB NVME`},consensusStorage(){return this.selectedConfig==="8"?`${Math.max(3,Math.ceil(this.retentionStorage/1048576))} TiB NVME`:`${Math.max(12,Math.ceil(this.retentionStorage/1048576*4))} TiB NVME`},archivalStorage(){return this.selectedConfig==="8"?`${Math.max(6,Math.ceil(this.retentionStorage/1048576))} TiB NVME`:`${Math.max(24,Math.ceil(this.retentionStorage/1048576*4))} TiB NVME`},prunedBridgeNodeStorage(){return this.selectedConfig==="8"?`${Math.max(1,Math.ceil(this.monthlyStorage/1048576))} TiB NVME`:`${Math.max(4,Math.ceil(this.monthlyStorage/1048576*4))} TiB NVME`},prunedFullNodeStorage(){return this.selectedConfig==="8"?`${Math.max(1,Math.ceil(this.monthlyStorage/1048576))} TiB NVME`:`${Math.max(4,Math.ceil(this.monthlyStorage/1048576*4))} TiB NVME`}}},t=o=>(S("data-v-30e455c4"),o=o(),b(),o),f={class:"storage-calculator"},w={class:"calculator-controls"},y={class:"control-group"},B=t(()=>e("option",{value:"8"},"8MB blocks every 6s",-1)),C=t(()=>e("option",{value:"32"},"32MB blocks every 6s",-1)),N=[B,C],T={class:"control-group"},k={class:"retention-info"},x=t(()=>e("br",null,null,-1)),A=t(()=>e("h3",null,"Data Availability nodes",-1)),V=t(()=>e("h4",null,"Non-archival (pruned) DA nodes",-1)),D={class:"results-table"},E=t(()=>e("thead",null,[e("tr",null,[e("th",null,"Node type"),e("th",null,"Memory"),e("th",null,"CPU"),e("th",null,"Disk"),e("th",null,"Bandwidth")])],-1)),G=t(()=>e("td",null,"Light node",-1)),P=t(()=>e("td",null,"500 MB RAM",-1)),R=t(()=>e("td",null,"Single core",-1)),q=t(()=>e("td",null,"56 Kbps",-1)),I=t(()=>e("td",null,"Bridge node (pruned)",-1)),F=t(()=>e("td",null,"64 GB RAM",-1)),U=t(()=>e("td",null,"8 cores",-1)),$=t(()=>e("td",null,"1 Gbps",-1)),O=t(()=>e("td",null,"Full storage node (pruned)",-1)),L=t(()=>e("td",null,"64 GB RAM",-1)),z=t(()=>e("td",null,"8 cores",-1)),j=t(()=>e("td",null,"1 Gbps",-1)),H=t(()=>e("h4",null,"Archival DA nodes",-1)),J={class:"results-table"},K=t(()=>e("thead",null,[e("tr",null,[e("th",null,"Node type"),e("th",null,"Memory"),e("th",null,"CPU"),e("th",null,"Disk"),e("th",null,"Bandwidth")])],-1)),Q=t(()=>e("td",null,"Bridge node (archival)",-1)),Y=t(()=>e("td",null,"64 GB RAM",-1)),W=t(()=>e("td",null,"8 cores",-1)),X=t(()=>e("td",null,"1 Gbps",-1)),Z=t(()=>e("td",null,"Full storage node (archival)",-1)),ee=t(()=>e("td",null,"64 GB RAM",-1)),te=t(()=>e("td",null,"8 cores",-1)),oe=t(()=>e("td",null,"1 Gbps",-1)),ne=t(()=>e("h3",null,"Consensus nodes",-1)),se=t(()=>e("h4",null,"Non-archival (default pruning) consensus nodes",-1)),le={class:"results-table"},ae=t(()=>e("thead",null,[e("tr",null,[e("th",null,"Node type"),e("th",null,"Memory"),e("th",null,"CPU"),e("th",null,"Disk"),e("th",null,"Bandwidth")])],-1)),ie=t(()=>e("td",null,"Validator",-1)),re=t(()=>e("td",null,"24 GB RAM",-1)),de=t(()=>e("td",null,"8 cores",-1)),he=t(()=>e("td",null,"1 Gbps",-1)),ce=t(()=>e("td",null,"Consensus node",-1)),ue=t(()=>e("td",null,"24 GB RAM",-1)),_e=t(()=>e("td",null,"8 cores",-1)),ge=t(()=>e("td",null,"1 Gbps",-1)),pe=t(()=>e("h4",null,"Archival consensus nodes",-1)),Se={class:"results-table"},be=t(()=>e("thead",null,[e("tr",null,[e("th",null,"Node type"),e("th",null,"Memory"),e("th",null,"CPU"),e("th",null,"Disk"),e("th",null,"Bandwidth")])],-1)),me=t(()=>e("td",null,"Consensus node",-1)),ve=t(()=>e("td",null,"64 GB RAM",-1)),Me=t(()=>e("td",null,"8 cores",-1)),fe=t(()=>e("td",null,"1 Gbps",-1));function we(o,l,u,Te,a,s){return h(),c("div",f,[e("div",w,[e("div",y,[e("label",null,[i(" Block Size Configuration: "),d(e("select",{"onUpdate:modelValue":l[0]||(l[0]=r=>a.selectedConfig=r),class:"select-input"},N,512),[[g,a.selectedConfig]])])]),e("div",T,[e("label",null,[i(" Archival Retention Period: "+n(a.retentionMonths)+" months ",1),d(e("input",{type:"range","onUpdate:modelValue":l[1]||(l[1]=r=>a.retentionMonths=r),min:"1",max:"72",class:"slider-input"},null,512),[[p,a.retentionMonths]])]),e("div",k,[i(" Estimated monthly storage: "+n(s.monthlyStorageFormatted)+" ",1),x,i(" Non-archival nodes retain 1 month of data ")])])]),A,V,e("div",D,[e("table",null,[E,e("tbody",null,[e("tr",null,[G,P,R,e("td",null,n(s.lightNodeStorage),1),q]),e("tr",null,[I,F,U,e("td",null,n(s.prunedBridgeNodeStorage),1),$]),e("tr",null,[O,L,z,e("td",null,n(s.prunedFullNodeStorage),1),j])])])]),H,e("div",J,[e("table",null,[K,e("tbody",null,[e("tr",null,[Q,Y,W,e("td",null,n(s.bridgeNodeStorage),1),X]),e("tr",null,[Z,ee,te,e("td",null,n(s.fullNodeStorage),1),oe])])])]),ne,se,e("div",le,[e("table",null,[ae,e("tbody",null,[e("tr",null,[ie,re,de,e("td",null,n(s.validatorStorage),1),he]),e("tr",null,[ce,ue,_e,e("td",null,n(s.consensusStorage),1),ge])])])]),pe,e("div",Se,[e("table",null,[be,e("tbody",null,[e("tr",null,[me,ve,Me,e("td",null,n(s.archivalStorage),1),fe])])])])])}const ye=_(M,[["render",we],["__scopeId","data-v-30e455c4"]]),Be=v("",10),Ce=e("p",null,"Please provide any feedback on the tutorials and guides. If you notice a bug or issue, feel free to make a pull request or write up a Github issue!",-1),xe=JSON.parse('{"title":"Overview to running nodes on Celestia","description":"An overview on how to participate in the Celestia network.","frontmatter":{"description":"An overview on how to participate in the Celestia network.","head":[["meta",{"property":"og:title","content":"Overview to running nodes on Celestia | Celestia Docs"}],["meta",{"property":"og:description","content":"An overview on how to participate in the Celestia network."}]]},"headers":[],"relativePath":"how-to-guides/nodes-overview.md","filePath":"how-to-guides/nodes-overview.md","lastUpdated":1740078199000}'),Ne={name:"how-to-guides/nodes-overview.md"},Ae=Object.assign(Ne,{setup(o){return(l,u)=>(h(),c("div",null,[Be,m(ye),Ce]))}});export{xe as __pageData,Ae as default};
