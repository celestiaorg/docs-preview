import{c as l}from"./chunks/constants.b02263eb.js";import{m as t}from"./chunks/mocha_versions.7ac23927.js";import{o as p,c,k as s,t as n,l as e,a,Q as o}from"./chunks/framework.1948ea25.js";const r=o("",8),i={class:"language-bash vp-adaptive-theme"},y=s("button",{title:"Copy Code",class:"copy"},null,-1),E=s("span",{class:"lang"},"bash",-1),d={class:"shiki github-dark vp-code-dark"},h={class:"line"},_=o("",14),F={style:{color:"#9ECBFF"}},u={class:"shiki github-light vp-code-light"},C={class:"line"},g=o("",14),b={style:{color:"#032F62"}},m=s("code",null,"celestia",-1),B=o("",5),T=o("",2),k={class:"language-bash vp-adaptive-theme"},v=s("button",{title:"Copy Code",class:"copy"},null,-1),f=s("span",{class:"lang"},"bash",-1),q={class:"shiki github-dark vp-code-dark"},S={class:"line"},A=o("",16),I={style:{color:"#9ECBFF"}},w={class:"line"},P=o("",12),N={style:{color:"#9ECBFF"}},D=o("",1),V=o("",1),R={class:"line"},x=o("",24),O={style:{color:"#9ECBFF"}},H=o("",1),L=s("span",{class:"line"},null,-1),U=s("span",{class:"line"},[s("span",{style:{color:"#B392F0"}},"NAME:"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"my_celes_key")],-1),z=s("span",{class:"line"},[s("span",{style:{color:"#B392F0"}},"ADDRESS:"),s("span",{style:{color:"#E1E4E8"}}," "),s("span",{style:{color:"#9ECBFF"}},"celestia1lgvzg4ek9v499pl5vvsvqpquhwfg0jznpwd92m")],-1),G=o("",1),j=o("",1),Y=s("span",{class:"line"},null,-1),M=o("",1),$={class:"shiki github-light vp-code-light"},K={class:"line"},W=o("",16),Q={style:{color:"#032F62"}},J={class:"line"},X=o("",12),Z={style:{color:"#032F62"}},ss=o("",1),as=o("",1),os={class:"line"},ns=o("",24),es={style:{color:"#032F62"}},ls=o("",1),ts=s("span",{class:"line"},null,-1),ps=s("span",{class:"line"},[s("span",{style:{color:"#6F42C1"}},"NAME:"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"my_celes_key")],-1),cs=s("span",{class:"line"},[s("span",{style:{color:"#6F42C1"}},"ADDRESS:"),s("span",{style:{color:"#24292E"}}," "),s("span",{style:{color:"#032F62"}},"celestia1lgvzg4ek9v499pl5vvsvqpquhwfg0jznpwd92m")],-1),rs=o("",1),is=o("",1),ys=s("span",{class:"line"},null,-1),Es=o("",1),ds=s("blockquote",null,[s("p",null,"Logs above have the timestamps removed for brevity. And yes, that's a Rickroll mnemonic. ðŸ˜œ")],-1),hs=s("h4",{id:"set-the-trusted-hash",tabindex:"-1"},[a("Set the trusted hash "),s("a",{class:"header-anchor",href:"#set-the-trusted-hash","aria-label":'Permalink to "Set the trusted hash"'},"â€‹")],-1),_s=s("p",null,[a("Setting and syncing to a trusted hash and height means your light node will not sample the entire chain. This is useful when you want to sync your light node quickly. However, it's important to note that this adds the trust assumption that you trust the entity where you get the hash and height from, in this case, the "),s("a",{href:"https://pops.one",target:"_blank",rel:"noreferrer"},"P-OPS"),a(" team's consensus endpoint.")],-1),Fs=s("p",null,"Let's set the trusted hash!",-1),us=o("",1),Cs=s("p",null,"Set the trusted height & hash",-1),gs=s("code",null,"config.toml",-1),bs=s("li",null,[a("Set "),s("code",null,"DASer.SampleFrom"),a(" to the trusted height (e.g. "),s("code",null,"SampleFrom = 123456"),a(")")],-1),ms=o("",7),Bs={class:"language-bash vp-adaptive-theme"},Ts=s("button",{title:"Copy Code",class:"copy"},null,-1),ks=s("span",{class:"lang"},"bash",-1),vs={class:"shiki github-dark vp-code-dark"},fs=o("",1),qs=s("span",{class:"line"},null,-1),Ss=o("",1),As={class:"line"},Is=s("span",{style:{color:"#B392F0"}},"node",-1),ws=s("span",{style:{color:"#E1E4E8"}}," ",-1),Ps=s("span",{style:{color:"#9ECBFF"}},"version:",-1),Ns=s("span",{style:{color:"#E1E4E8"}}," 	",-1),Ds={style:{color:"#9ECBFF"}},Vs=o("",1),Rs={class:"line"},xs=s("span",{style:{color:"#B392F0"}},"network:",-1),Os=s("span",{style:{color:"#E1E4E8"}}," 	",-1),Hs={style:{color:"#9ECBFF"}},Ls=s("span",{class:"line"},null,-1),Us=o("",1),zs={class:"shiki github-light vp-code-light"},Gs=o("",1),js=s("span",{class:"line"},null,-1),Ys=o("",1),Ms={class:"line"},$s=s("span",{style:{color:"#6F42C1"}},"node",-1),Ks=s("span",{style:{color:"#24292E"}}," ",-1),Ws=s("span",{style:{color:"#032F62"}},"version:",-1),Qs=s("span",{style:{color:"#24292E"}}," 	",-1),Js={style:{color:"#032F62"}},Xs=o("",1),Zs={class:"line"},sa=s("span",{style:{color:"#6F42C1"}},"network:",-1),aa=s("span",{style:{color:"#24292E"}}," 	",-1),oa={style:{color:"#032F62"}},na=s("span",{class:"line"},null,-1),ea=o("",1),la=o("",45),ta=o("",6),ha=JSON.parse('{"title":"Quick-start guide","description":"Learn how to get started and post your first blob to Celestia.","frontmatter":{"description":"Learn how to get started and post your first blob to Celestia.","head":[["meta",{"property":"og:title","content":"Quick-start guide | Celestia Docs"}],["meta",{"property":"og:description","content":"Learn how to get started and post your first blob to Celestia."}]]},"headers":[],"relativePath":"how-to-guides/quick-start.md","filePath":"how-to-guides/quick-start.md","lastUpdated":1744130141000}'),pa={name:"how-to-guides/quick-start.md"},_a=Object.assign(pa,{setup(ca){return(ra,ia)=>(p(),c("div",null,[r,s("div",i,[y,E,s("pre",d,[s("code",null,[s("span",h,[_,s("span",F,n(e(t)["node-latest-tag"]),1)])])]),s("pre",u,[s("code",null,[s("span",C,[g,s("span",b,n(e(t)["node-latest-tag"]),1)])])])]),s("p",null,[a("Once you've installed "),m,a(", double-check that you're using the right version ("),s("code",null,n(e(t)["node-latest-tag"]),1),a(") by running:")]),B,s("blockquote",null,[s("p",null,[a("The chain ID "),s("code",null,n(e(l).mochaChainId),1),a(" is also an accepted alias.")])]),T,s("div",k,[v,f,s("pre",q,[s("code",null,[s("span",S,[A,s("span",I,"'/Users/js/.celestia-light-"+n(e(l).mochaChainId)+"'",1)]),a(`
`),s("span",w,[P,s("span",N,'"/Users/js/.celestia-light-'+n(e(l).mochaChainId)+'/config.toml"}',1)]),a(`
`),D,a(`
`),V,a(`
`),s("span",R,[x,s("span",O,'"/Users/js/.celestia-light-'+n(e(l).mochaChainId)+'/keys"}',1)]),a(`
`),H,a(`
`),L,a(`
`),U,a(`
`),z,a(`
`),G,a(`
`),j,a(`
`),Y,a(`
`),M])]),s("pre",$,[s("code",null,[s("span",K,[W,s("span",Q,"'/Users/js/.celestia-light-"+n(e(l).mochaChainId)+"'",1)]),a(`
`),s("span",J,[X,s("span",Z,'"/Users/js/.celestia-light-'+n(e(l).mochaChainId)+'/config.toml"}',1)]),a(`
`),ss,a(`
`),as,a(`
`),s("span",os,[ns,s("span",es,'"/Users/js/.celestia-light-'+n(e(l).mochaChainId)+'/keys"}',1)]),a(`
`),ls,a(`
`),ts,a(`
`),ps,a(`
`),cs,a(`
`),rs,a(`
`),is,a(`
`),ys,a(`
`),Es])])]),s("p",null,[a("You'll also see in this example, using the Mocha testnet and setting up a light node, our node store will be at: "),s("code",null,"~/.celestia-light-"+n(e(l).mochaChainId),1),a(".")]),ds,hs,_s,Fs,s("ol",null,[us,s("li",null,[Cs,s("ol",null,[s("li",null,[a("Open your "),gs,a(" at "),s("code",null,".celestia-light-"+n(e(l).mochaChainId)+"/config.toml",1)]),bs])])]),ms,s("div",Bs,[Ts,ks,s("pre",vs,[s("code",null,[fs,a(`
`),qs,a(`
`),Ss,a(`
`),s("span",As,[Is,ws,Ps,Ns,s("span",Ds,n(e(t)["node-latest-tag"].slice(1)),1)]),a(`
`),Vs,a(`
`),s("span",Rs,[xs,Os,s("span",Hs,n(e(l).mochaChainId),1)]),a(`
`),Ls,a(`
`),Us])]),s("pre",zs,[s("code",null,[Gs,a(`
`),js,a(`
`),Ys,a(`
`),s("span",Ms,[$s,Ks,Ws,Qs,s("span",Js,n(e(t)["node-latest-tag"].slice(1)),1)]),a(`
`),Xs,a(`
`),s("span",Zs,[sa,aa,s("span",oa,n(e(l).mochaChainId),1)]),a(`
`),na,a(`
`),ea])])]),la,s("p",null,[a("In this guide, the node store for "),s("code",null,"~/.celestia-light-"+n(e(l).mochaChainId),1),a(" contains the following directories and file types:")]),ta]))}});export{ha as __pageData,_a as default};
