import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.c5243894.js";const u=JSON.parse('{"title":"Celestia Node Client Demo","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"Celestia Node Client Demo | Celestia Docs"}],["meta",{"property":"og:description","content":"The first modular blockchain network."}]]},"headers":[],"relativePath":"demo/README.md","filePath":"demo/README.md","lastUpdated":1745516599000}'),l={name:"demo/README.md"},o=e(`<h1 id="celestia-node-client-demo" tabindex="-1">Celestia Node Client Demo <a class="header-anchor" href="#celestia-node-client-demo" aria-label="Permalink to &quot;Celestia Node Client Demo&quot;">​</a></h1><p>This demo showcases how to use the Celestia Node API to interact with a Celestia node. It demonstrates the following functionality:</p><ol><li>Connecting to a Celestia node</li><li>Getting node information</li><li>Getting headers at specific heights</li><li>Subscribing to new headers</li></ol><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Go 1.23.6 or later</li><li>A running Celestia node (local or remote)</li></ul><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><ol><li>Clone this repository</li><li>Install dependencies:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">go</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tidy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">go</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tidy</span></span></code></pre></div></li></ol><h2 id="running-the-demo" tabindex="-1">Running the Demo <a class="header-anchor" href="#running-the-demo" aria-label="Permalink to &quot;Running the Demo&quot;">​</a></h2><p>To run the demo, make sure you have a Celestia node running. By default, the demo connects to <code>http://localhost:26658</code>. If your node is running at a different URL, you can modify the <code>url</code> variable in <code>main.go</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">go</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">main.go</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">go</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">main.go</span></span></code></pre></div><h2 id="understanding-the-client-api" tabindex="-1">Understanding the Client API <a class="header-anchor" href="#understanding-the-client-api" aria-label="Permalink to &quot;Understanding the Client API&quot;">​</a></h2><p>The Celestia Node API is defined in the <code>client.go</code> file in the <code>github.com/celestiaorg/celestia-node/api/rpc/client</code> package. The main components are:</p><h3 id="client-structure" tabindex="-1">Client Structure <a class="header-anchor" href="#client-structure" aria-label="Permalink to &quot;Client Structure&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Fraud      fraud.API</span></span>
<span class="line"><span style="color:#E1E4E8;">    Header     header.API</span></span>
<span class="line"><span style="color:#E1E4E8;">    State      state.API</span></span>
<span class="line"><span style="color:#E1E4E8;">    Share      share.API</span></span>
<span class="line"><span style="color:#E1E4E8;">    DAS        das.API</span></span>
<span class="line"><span style="color:#E1E4E8;">    P2P        p2p.API</span></span>
<span class="line"><span style="color:#E1E4E8;">    Node       node.API</span></span>
<span class="line"><span style="color:#E1E4E8;">    Blob       blob.API</span></span>
<span class="line"><span style="color:#E1E4E8;">    DA         da.API</span></span>
<span class="line"><span style="color:#E1E4E8;">    Blobstream blobstream.API</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    Fraud      fraud.API</span></span>
<span class="line"><span style="color:#24292E;">    Header     header.API</span></span>
<span class="line"><span style="color:#24292E;">    State      state.API</span></span>
<span class="line"><span style="color:#24292E;">    Share      share.API</span></span>
<span class="line"><span style="color:#24292E;">    DAS        das.API</span></span>
<span class="line"><span style="color:#24292E;">    P2P        p2p.API</span></span>
<span class="line"><span style="color:#24292E;">    Node       node.API</span></span>
<span class="line"><span style="color:#24292E;">    Blob       blob.API</span></span>
<span class="line"><span style="color:#24292E;">    DA         da.API</span></span>
<span class="line"><span style="color:#24292E;">    Blobstream blobstream.API</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="creating-a-client" tabindex="-1">Creating a Client <a class="header-anchor" href="#creating-a-client" aria-label="Permalink to &quot;Creating a Client&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">client, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.</span><span style="color:#79B8FF;">NewClient</span><span style="color:#E1E4E8;">(ctx, url, token)</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> fmt.</span><span style="color:#79B8FF;">Errorf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;failed to create client: </span><span style="color:#79B8FF;">%w</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, err)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">defer</span><span style="color:#E1E4E8;"> client.</span><span style="color:#79B8FF;">Close</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">client, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.</span><span style="color:#005CC5;">NewClient</span><span style="color:#24292E;">(ctx, url, token)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> fmt.</span><span style="color:#005CC5;">Errorf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;failed to create client: </span><span style="color:#005CC5;">%w</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, err)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">defer</span><span style="color:#24292E;"> client.</span><span style="color:#005CC5;">Close</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="using-the-client" tabindex="-1">Using the Client <a class="header-anchor" href="#using-the-client" aria-label="Permalink to &quot;Using the Client&quot;">​</a></h3><p>The client provides access to various APIs:</p><ul><li><p><strong>Node API</strong>: Get information about the node</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">nodeInfo, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.Node.</span><span style="color:#79B8FF;">Info</span><span style="color:#E1E4E8;">(ctx)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">nodeInfo, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.Node.</span><span style="color:#005CC5;">Info</span><span style="color:#24292E;">(ctx)</span></span></code></pre></div></li><li><p><strong>Header API</strong>: Get and subscribe to headers</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Get header at a specific height</span></span>
<span class="line"><span style="color:#E1E4E8;">header, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.Header.</span><span style="color:#79B8FF;">GetByHeight</span><span style="color:#E1E4E8;">(ctx, height)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Subscribe to new headers</span></span>
<span class="line"><span style="color:#E1E4E8;">headerChan, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.Header.</span><span style="color:#79B8FF;">Subscribe</span><span style="color:#E1E4E8;">(ctx)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Get header at a specific height</span></span>
<span class="line"><span style="color:#24292E;">header, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.Header.</span><span style="color:#005CC5;">GetByHeight</span><span style="color:#24292E;">(ctx, height)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Subscribe to new headers</span></span>
<span class="line"><span style="color:#24292E;">headerChan, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.Header.</span><span style="color:#005CC5;">Subscribe</span><span style="color:#24292E;">(ctx)</span></span></code></pre></div></li><li><p><strong>Blob API</strong>: Submit and retrieve blobs</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Submit a blob</span></span>
<span class="line"><span style="color:#E1E4E8;">height, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.Blob.</span><span style="color:#79B8FF;">Submit</span><span style="color:#E1E4E8;">(ctx, namespace, data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Retrieve blobs</span></span>
<span class="line"><span style="color:#E1E4E8;">blobs, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.Blob.</span><span style="color:#79B8FF;">GetAll</span><span style="color:#E1E4E8;">(ctx, height, namespaces)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Submit a blob</span></span>
<span class="line"><span style="color:#24292E;">height, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.Blob.</span><span style="color:#005CC5;">Submit</span><span style="color:#24292E;">(ctx, namespace, data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Retrieve blobs</span></span>
<span class="line"><span style="color:#24292E;">blobs, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.Blob.</span><span style="color:#005CC5;">GetAll</span><span style="color:#24292E;">(ctx, height, namespaces)</span></span></code></pre></div></li><li><p><strong>Share API</strong>: Get shares and Extended Data Squares (EDS)</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Get shares</span></span>
<span class="line"><span style="color:#E1E4E8;">shares, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.Share.</span><span style="color:#79B8FF;">GetSharesByNamespace</span><span style="color:#E1E4E8;">(ctx, header, namespace)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Get EDS</span></span>
<span class="line"><span style="color:#E1E4E8;">eds, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.Share.</span><span style="color:#79B8FF;">GetEDS</span><span style="color:#E1E4E8;">(ctx, header)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Get shares</span></span>
<span class="line"><span style="color:#24292E;">shares, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.Share.</span><span style="color:#005CC5;">GetSharesByNamespace</span><span style="color:#24292E;">(ctx, header, namespace)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Get EDS</span></span>
<span class="line"><span style="color:#24292E;">eds, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.Share.</span><span style="color:#005CC5;">GetEDS</span><span style="color:#24292E;">(ctx, header)</span></span></code></pre></div></li></ul><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><ul><li>The demo uses timeouts to automatically stop after 10 seconds for the subscription functions.</li><li>The demo handles interrupts (Ctrl+C) gracefully.</li><li>By default, the demo uses an empty auth token. If your node requires authentication, you can modify the <code>token</code> variable in <code>main.go</code>.</li></ul>`,21),p=[o];function t(c,r,i,d,E,y){return a(),n("div",null,p)}const g=s(l,[["render",t]]);export{u as __pageData,g as default};
