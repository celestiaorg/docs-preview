import{c as o}from"./chunks/constants.3a552024.js";import{A as b}from"./chunks/ArabicaVersionTags.51500c9b.js";import{_ as h,o as d,c,k as t,t as a,O as l,E as p,a as r,l as n}from"./chunks/framework.10232788.js";import"./chunks/arabica_versions.99f5c23f.js";const g="/docs-preview/pr-2129/img/arabica-devnet.png",y={name:"ArabicaDevnetDetails",data(){return{constants:o}}},f=["href"],m=["href"];function v(u,s,e,R,i,B){return d(),c("table",null,[s[3]||(s[3]=t("tr",null,[t("th",null,"Detail"),t("th",null,"Value")],-1)),t("tr",null,[s[0]||(s[0]=t("td",null,"Chain ID",-1)),t("td",null,[t("code",null,a(i.constants.arabicaChainId),1)])]),s[4]||(s[4]=t("tr",null,[t("td",null,"Genesis hash"),t("td",null,[t("code",null,"27122593765E07329BC348E8D16E92DCB4C75B34CCCB35C640FD7A4484D4C711")])],-1)),t("tr",null,[s[1]||(s[1]=t("td",null,"Genesis file",-1)),t("td",null,[t("a",{href:`https://github.com/celestiaorg/networks/blob/master/${i.constants.arabicaChainId}/genesis.json`,target:"_blank",rel:"noopener noreferrer"}," https://github.com/celestiaorg/networks/blob/master/"+a(i.constants.arabicaChainId)+"/genesis.json ",9,f)])]),t("tr",null,[s[2]||(s[2]=t("td",null,"Peers file",-1)),t("td",null,[t("a",{href:`https://github.com/celestiaorg/networks/blob/master/${i.constants.arabicaChainId}/peers.txt`,target:"_blank",rel:"noopener noreferrer"}," https://github.com/celestiaorg/networks/blob/master/"+a(i.constants.arabicaChainId)+"/peers.txt ",9,m)])]),s[5]||(s[5]=t("tr",null,[t("td",null,"Validators"),t("td",null," 4 ")],-1))])}const E=h(y,[["render",v]]),k={class:"language-bash vp-adaptive-theme"},w={class:"shiki github-dark vp-code-dark"},C={class:"line"},A={style:{color:"#9ECBFF"}},F={class:"shiki github-light vp-code-light"},D={class:"line"},P={style:{color:"#032F62"}},I={href:"https://faucet.celestia-%7B%7Bconstants.arabicaChainId%7D%7D.com/",target:"_blank",rel:"noreferrer"},q={href:"https://explorer.celestia-%7B%7Bconstants.arabicaChainId%7D%7D.com",target:"_blank",rel:"noreferrer"},O=JSON.parse('{"title":"Arabica devnet","description":"A guide to Arabica devnet.","frontmatter":{"description":"A guide to Arabica devnet.","head":[["meta",{"property":"og:title","content":"Arabica devnet | Celestia Docs"}],["meta",{"property":"og:description","content":"A guide to Arabica devnet."}]]},"headers":[],"relativePath":"how-to-guides/arabica-devnet.md","filePath":"how-to-guides/arabica-devnet.md","lastUpdated":1751400450000}'),x={name:"how-to-guides/arabica-devnet.md"},U=Object.assign(x,{setup(u){return(s,e)=>(d(),c("div",null,[e[40]||(e[40]=l('<h1 id="arabica-devnet" tabindex="-1">Arabica devnet <a class="header-anchor" href="#arabica-devnet" aria-label="Permalink to &quot;Arabica devnet&quot;">​</a></h1><p><img src="'+g+'" alt="arabica-devnet"></p><p>Arabica devnet is a testnet from Celestia Labs that is focused exclusively on providing developers with enhanced performance and the latest upgrades for testing their rollups and applications.</p><p>Arabica does not focus on validator or consensus-level testing, rather, that is what Mocha testnet is used for. If you are a validator, we recommend testing your validator operations on the <a href="/docs-preview/pr-2129/how-to-guides/mocha-testnet">Mocha testnet</a>.</p><h2 id="network-stability-and-upgrades" tabindex="-1">Network stability and upgrades <a class="header-anchor" href="#network-stability-and-upgrades" aria-label="Permalink to &quot;Network stability and upgrades&quot;">​</a></h2><p>Arabica has the latest updates from all Celestia&#39;s products deployed on it, it can be subject to many changes. Therefore, as a fair warning, Arabica can break unexpectedly, but given it will be continuously updated, it is a useful way to keep testing the latest changes in the software.</p><p>Developers can still deploy on Mocha testnet their sovereign rollups if they chose to do so, it just will always lag behind Arabica devnet until Mocha undergoes network upgrades in coordination with validators.</p><h2 id="network-details" tabindex="-1">Network details <a class="header-anchor" href="#network-details" aria-label="Permalink to &quot;Network details&quot;">​</a></h2>',8)),p(E),e[41]||(e[41]=t("h3",{id:"software-version-numbers",tabindex:"-1"},[r("Software version numbers "),t("a",{class:"header-anchor",href:"#software-version-numbers","aria-label":'Permalink to "Software version numbers"'},"​")],-1)),p(b),e[42]||(e[42]=l('<h2 id="network-status" tabindex="-1">Network status <a class="header-anchor" href="#network-status" aria-label="Permalink to &quot;Network status&quot;">​</a></h2><p>For real-time network status information, including uptime, incident reports, and service availability, visit the <a href="https://status.celestia.dev/status/arabica" target="_blank" rel="noreferrer">official Celestia Arabica devnet status page</a>.</p><h2 id="integrations" tabindex="-1">Integrations <a class="header-anchor" href="#integrations" aria-label="Permalink to &quot;Integrations&quot;">​</a></h2><p>This guide contains the relevant sections for how to connect to Arabica devnet, depending on the type of node you are running. Your best approach to participating is to first determine which node you would like to run. Each node’s guide will link to the relevant network in order to show you how to connect to them. Learn about the different endpoint types <a href="https://docs.cosmos.network/v0.50/learn/advanced/grpc_rest" target="_blank" rel="noreferrer">in the Cosmos SDK documentation</a>.</p><h3 id="production-rpc-endpoints" tabindex="-1">Production RPC endpoints <a class="header-anchor" href="#production-rpc-endpoints" aria-label="Permalink to &quot;Production RPC endpoints&quot;">​</a></h3><p>These RPC providers are meant to be used in production environments and for specific use cases that require reliable access to full block history, such as:</p><ul><li>Running Bridge Nodes that download data from core RPC endpoints</li><li>Applications that need Bridge Node endpoints with guaranteed uptime and SLAs</li></ul><table><thead><tr><th>Provider</th><th>URL</th></tr></thead><tbody><tr><td>Numia</td><td>For RPC access: <a href="https://docs.numia.xyz/infra/overview/getting-started" target="_blank" rel="noreferrer">https://docs.numia.xyz/infra/overview/getting-started</a></td></tr><tr><td>Numia</td><td>For data warehouse access: <a href="https://docs.numia.xyz/sql/querying-data/chains/celestia" target="_blank" rel="noreferrer">https://docs.numia.xyz/sql/querying-data/chains/celestia</a></td></tr><tr><td>Grove</td><td><a href="https://www.grove.city/" target="_blank" rel="noreferrer">https://www.grove.city/</a></td></tr></tbody></table><h3 id="community-rpc-endpoints" tabindex="-1">Community RPC endpoints <a class="header-anchor" href="#community-rpc-endpoints" aria-label="Permalink to &quot;Community RPC endpoints&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Do not rely on the free community endpoints listed below for production deployments. Production deployments should rely on <a href="#production-rpc-endpoints">service providers with SLAs</a> or your own node.</p></div><p>RPC endpoints and types of nodes you can run in order to participate in Arabica devnet:</p>',11)),t("table",null,[e[18]||(e[18]=t("thead",null,[t("tr",null,[t("th",null,"Node type"),t("th",null,"Endpoint type"),t("th",null,"Endpoint")])],-1)),t("tbody",null,[t("tr",null,[e[0]||(e[0]=t("td",null,[t("strong",null,"Consensus nodes"),r(" ("),t("a",{href:"./../how-to-guides/consensus-node"},"full"),r(")")],-1)),e[1]||(e[1]=t("td",null,"Consensus RPC",-1)),t("td",null,[t("code",null,"https://rpc.celestia-"+a(n(o).arabicaChainId)+".com",1)])]),t("tr",null,[e[2]||(e[2]=t("td",null,null,-1)),e[3]||(e[3]=t("td",null,"API",-1)),t("td",null,[t("code",null,"https://api.celestia-"+a(n(o).arabicaChainId)+".com",1)])]),t("tr",null,[e[4]||(e[4]=t("td",null,null,-1)),e[5]||(e[5]=t("td",null,"gRPC",-1)),t("td",null,[t("code",null,"grpc.celestia-"+a(n(o).arabicaChainId)+".com:443",1)])]),e[14]||(e[14]=t("tr",null,[t("td"),t("td",null,"Direct endpoints with open ports"),t("td",null,"Open ports: 26656 (p2p), 26657 (RPC), 1317 (API), 9090 (GRPC)")],-1)),t("tr",null,[e[6]||(e[6]=t("td",null,null,-1)),e[7]||(e[7]=t("td",null,null,-1)),t("td",null,[t("code",null,"validator-1.celestia-"+a(n(o).arabicaChainId)+".com",1)])]),t("tr",null,[e[8]||(e[8]=t("td",null,null,-1)),e[9]||(e[9]=t("td",null,null,-1)),t("td",null,[t("code",null,"validator-2.celestia-"+a(n(o).arabicaChainId)+".com",1)])]),t("tr",null,[e[10]||(e[10]=t("td",null,null,-1)),e[11]||(e[11]=t("td",null,null,-1)),t("td",null,[t("code",null,"validator-3.celestia-"+a(n(o).arabicaChainId)+".com",1)])]),t("tr",null,[e[12]||(e[12]=t("td",null,null,-1)),e[13]||(e[13]=t("td",null,null,-1)),t("td",null,[t("code",null,"validator-4.celestia-"+a(n(o).arabicaChainId)+".com",1)])]),e[15]||(e[15]=t("tr",null,[t("td"),t("td"),t("td")],-1)),e[16]||(e[16]=t("tr",null,[t("td",null,[t("strong",null,"Data availability nodes")]),t("td",null,"DA Bridge Node Endpoints"),t("td",null,[r("See the list of official Celestia bootstrappers in the "),t("a",{href:"https://github.com/celestiaorg/celestia-node/blob/a87a17557223d88231b56d323d22ac9da31871db/nodebuilder/p2p/bootstrap.go#L39",target:"_blank",rel:"noreferrer"},"celestia-node GitHub repository"),r(".")])],-1)),e[17]||(e[17]=t("tr",null,[t("td"),t("td",null,[t("code",null,"--core.ip string"),r(" endpoints")]),t("td",null,'Refer to "Direct endpoints with open ports" above')],-1))])]),e[43]||(e[43]=l('<p>You can <a href="https://celestia-tools.brightlystake.com/" target="_blank" rel="noreferrer">find the status of these endpoints</a>.</p><h3 id="using-consensus-endpoints-with-da-nodes" tabindex="-1">Using consensus endpoints with DA nodes <a class="header-anchor" href="#using-consensus-endpoints-with-da-nodes" aria-label="Permalink to &quot;Using consensus endpoints with DA nodes&quot;">​</a></h3><h4 id="data-availability-da-rpc-endpoints-for-bridge-node-sync" tabindex="-1">Data availability (DA) RPC endpoints for bridge node sync <a class="header-anchor" href="#data-availability-da-rpc-endpoints-for-bridge-node-sync" aria-label="Permalink to &quot;Data availability (DA) RPC endpoints for bridge node sync&quot;">​</a></h4><p>These RPC endpoints allow bridge nodes to sync blocks from the Celestia network. For users, they will need to provide a <code>–core.ip string</code> from a consensus node’s URL or IP that populates a default RPC port at 26657 to their respective DA node.</p><h4 id="data-availability-da-grpc-endpoints-for-state-access" tabindex="-1">Data availability (DA) gRPC endpoints for state access <a class="header-anchor" href="#data-availability-da-grpc-endpoints-for-state-access" aria-label="Permalink to &quot;Data availability (DA) gRPC endpoints for state access&quot;">​</a></h4><p>These gRPC endpoints for DA nodes provide state access for querying the chain’s state and broadcasting transactions (balances, blobs, etc.) to the Celestia network. For users, they will need to provide a <code>–core.ip string</code> from a consensus node’s URL or IP that populates a default gRPC port at 9090 to their respective DA node.</p><div class="tip custom-block"><p class="custom-block-title">EXAMPLE</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">da_typ</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--core.ip</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">ur</span><span style="color:#E1E4E8;">l</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--core.port</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">por</span><span style="color:#E1E4E8;">t</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">da_typ</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--core.ip</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">ur</span><span style="color:#24292E;">l</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--core.port</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">por</span><span style="color:#24292E;">t</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div></div><p>RPCs for DA nodes to initialise or start your celestia-node to Arabica devnet with can be found in the table in the &quot;Direct endpoints with open ports&quot; section above.</p><p>As an example, this command will work to start a light node with state access, using default ports:</p>',9)),t("div",k,[e[33]||(e[33]=t("button",{title:"Copy Code",class:"copy"},null,-1)),e[34]||(e[34]=t("span",{class:"lang"},"bash",-1)),t("pre",w,[t("code",null,[e[24]||(e[24]=l(`<span class="line"><span style="color:#B392F0;">celestia</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">light</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--p2p.network</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">arabica</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
`,2)),t("span",C,[e[19]||(e[19]=t("span",{style:{color:"#E1E4E8"}},"  ",-1)),e[20]||(e[20]=t("span",{style:{color:"#79B8FF"}},"--core.ip",-1)),e[21]||(e[21]=t("span",{style:{color:"#E1E4E8"}}," ",-1)),t("span",A,"validator-1.celestia-"+a(n(o).arabicaChainId)+".com",1),e[22]||(e[22]=t("span",{style:{color:"#E1E4E8"}}," ",-1)),e[23]||(e[23]=t("span",{style:{color:"#79B8FF"}},"\\",-1))]),e[25]||(e[25]=l(`
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">--core.port</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9090</span></span>`,2))])]),t("pre",F,[t("code",null,[e[31]||(e[31]=l(`<span class="line"><span style="color:#6F42C1;">celestia</span><span style="color:#24292E;"> </span><span style="color:#032F62;">light</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--p2p.network</span><span style="color:#24292E;"> </span><span style="color:#032F62;">arabica</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
`,2)),t("span",D,[e[26]||(e[26]=t("span",{style:{color:"#24292E"}},"  ",-1)),e[27]||(e[27]=t("span",{style:{color:"#005CC5"}},"--core.ip",-1)),e[28]||(e[28]=t("span",{style:{color:"#24292E"}}," ",-1)),t("span",P,"validator-1.celestia-"+a(n(o).arabicaChainId)+".com",1),e[29]||(e[29]=t("span",{style:{color:"#24292E"}}," ",-1)),e[30]||(e[30]=t("span",{style:{color:"#005CC5"}},"\\",-1))]),e[32]||(e[32]=l(`
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">--core.port</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9090</span></span>`,2))])])]),e[44]||(e[44]=l('<div class="tip custom-block"><p class="custom-block-title">Bridge node runners</p><p>Not all of the RPC endpoints do not guarantee the full block history. Find <a href="https://celestia-tools.brightlystake.com/" target="_blank" rel="noreferrer">an archive endpoint on the community dashboard</a> or run your own consensus node with no pruning for your bridge node.</p></div><h2 id="arabica-devnet-faucet" tabindex="-1">Arabica devnet faucet <a class="header-anchor" href="#arabica-devnet-faucet" aria-label="Permalink to &quot;Arabica devnet faucet&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>USING THIS FAUCET DOES NOT ENTITLE YOU TO ANY AIRDROP OR OTHER DISTRIBUTION OF MAINNET CELESTIA TOKENS.</p></div><h3 id="discord" tabindex="-1">Discord <a class="header-anchor" href="#discord" aria-label="Permalink to &quot;Discord&quot;">​</a></h3><p>You can request from Arabica devnet Faucet on the #arabica-faucet channel on Celestia&#39;s Discord server with the following command:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$request &lt;CELESTIA-ADDRESS&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$request &lt;CELESTIA-ADDRESS&gt;</span></span></code></pre></div><p>Where <code>&lt;CELESTIA-ADDRESS&gt;</code> is a <code>celestia1******</code> generated address.</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>Faucet has a limit of 10 tokens per week per address/Discord ID.</p></div><h3 id="web" tabindex="-1">Web <a class="header-anchor" href="#web" aria-label="Permalink to &quot;Web&quot;">​</a></h3>',9)),t("p",null,[e[35]||(e[35]=r("The web faucet is available at ")),e[36]||(e[36]=t("a",{href:"https://arabica.celenium.io/faucet",target:"_blank",rel:"noreferrer"},"https://arabica.celenium.io/faucet",-1)),e[37]||(e[37]=r(" and ")),t("a",I,"https://faucet.celestia-"+a(n(o).arabicaChainId)+".com/",1),e[38]||(e[38]=r("."))]),e[45]||(e[45]=t("h2",{id:"explorers",tabindex:"-1"},[r("Explorers "),t("a",{class:"header-anchor",href:"#explorers","aria-label":'Permalink to "Explorers"'},"​")],-1)),e[46]||(e[46]=t("p",null,"There are multiple explorers you can use for Arabica:",-1)),t("ul",null,[e[39]||(e[39]=t("li",null,[t("a",{href:"https://arabica.celenium.io",target:"_blank",rel:"noreferrer"},"https://arabica.celenium.io")],-1)),t("li",null,[t("a",q,"https://explorer.celestia-"+a(n(o).arabicaChainId)+".com",1)])]),e[47]||(e[47]=l('<h2 id="network-upgrades" tabindex="-1">Network upgrades <a class="header-anchor" href="#network-upgrades" aria-label="Permalink to &quot;Network upgrades&quot;">​</a></h2><p>Join our <a href="https://t.me/+smSFIA7XXLU4MjJh" target="_blank" rel="noreferrer">Telegram announcement channel</a> for network upgrades.</p><p>See the <a href="/docs-preview/pr-2129/how-to-guides/network-upgrade-process">network upgrade process page</a> to learn more about specific upgrades like the <a href="/docs-preview/pr-2129/how-to-guides/network-upgrade-process#ginger-network-upgrade">Ginger network upgrade</a>.</p>',3))]))}});export{O as __pageData,U as default};
