import{a as l}from"./chunks/arabica_versions.b0524ad4.js";import{m as n}from"./chunks/mocha_versions.619d4aa2.js";import{m as p}from"./chunks/mainnet_versions.773a045d.js";import{o as r,c as i,O as t,k as e,t as o,l as a}from"./chunks/framework.9c692c12.js";const d={class:"vp-code-group vp-adaptive-theme"},c={class:"blocks"},u={class:"language-bash vp-adaptive-theme active"},h={class:"shiki github-dark vp-code-dark"},y={class:"line"},g={style:{color:"#9ECBFF"}},b={class:"shiki github-light vp-code-light"},m={class:"line"},E={style:{color:"#032F62"}},f={class:"language-bash vp-adaptive-theme"},F={class:"shiki github-dark vp-code-dark"},v={class:"line"},C={style:{color:"#9ECBFF"}},k={class:"shiki github-light vp-code-light"},w={class:"line"},P={style:{color:"#032F62"}},B={class:"language-bash vp-adaptive-theme"},x={class:"shiki github-dark vp-code-dark"},q={class:"line"},T={style:{color:"#9ECBFF"}},I={class:"shiki github-light vp-code-light"},R={class:"line"},A={style:{color:"#032F62"}},S={class:"language-bash vp-adaptive-theme"},D={class:"shiki github-dark vp-code-dark"},O={class:"line"},L={style:{color:"#9ECBFF"}},H={class:"shiki github-light vp-code-light"},M={class:"line"},N={style:{color:"#032F62"}},Y=JSON.parse('{"title":"Install celestia-app","description":"Learn how you can build celestia-app.","frontmatter":{"description":"Learn how you can build celestia-app.","head":[["meta",{"property":"og:title","content":"Install celestia-app | Celestia Docs"}],["meta",{"property":"og:description","content":"Learn how you can build celestia-app."}]]},"headers":[],"relativePath":"how-to-guides/celestia-app.md","filePath":"how-to-guides/celestia-app.md","lastUpdated":1751476185000}'),$={name:"how-to-guides/celestia-app.md"},j=Object.assign($,{setup(U){return(V,s)=>(r(),i("div",null,[s[40]||(s[40]=t('<h1 id="install-celestia-app" tabindex="-1">Install celestia-app <a class="header-anchor" href="#install-celestia-app" aria-label="Permalink to &quot;Install celestia-app&quot;">​</a></h1><p>This tutorial will guide you through installing celestia-app, both <a href="#building-binary-from-source">from source</a> and with <a href="#installing-a-pre-built-binary">a pre-built binary</a></p><p>Celestia-app is the software that enables you to run consensus nodes (including validators) and provide RPC endpoints.</p><h2 id="supported-architectures" tabindex="-1">Supported architectures <a class="header-anchor" href="#supported-architectures" aria-label="Permalink to &quot;Supported architectures&quot;">​</a></h2><p>Celestia-app officially supports the following architectures:</p><ul><li>linux/amd64</li><li>linux/arm64</li><li>darwin/amd64 (macOS Intel)</li><li>darwin/arm64 (macOS Apple Silicon)</li></ul><p>Only these four architectures are officially tested and supported.</p><h2 id="building-binary-from-source" tabindex="-1">Building binary from source <a class="header-anchor" href="#building-binary-from-source" aria-label="Permalink to &quot;Building binary from source&quot;">​</a></h2><p>This section of the tutorial assumes you completed the steps in <a href="/docs-preview/pr-2130/how-to-guides/environment">setting up your own environment</a>.</p><p>The steps below will create a binary file named <code>celestia-appd</code> inside <code>$HOME/go/bin</code> folder which will be used later to run the node. Be sure to select the correct network to install the binary for.</p>',10)),e("ol",null,[s[32]||(s[32]=t(`<li><p>Remove any existing copy of celestia-app, clone the repository, and change into the directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-app</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/celestiaorg/celestia-app.git</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-app</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/celestiaorg/celestia-app.git</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-app</span></span></code></pre></div></li>`,1)),e("li",null,[s[31]||(s[31]=e("p",null,"Check out to the desired version, based on the network you will use:",-1)),e("div",d,[s[30]||(s[30]=t('<div class="tabs"><input type="radio" name="group-9e7H9" id="tab-1FAoOKP" checked="checked"><label for="tab-1FAoOKP">Mainnet Beta</label><input type="radio" name="group-9e7H9" id="tab-RSoDB6P"><label for="tab-RSoDB6P">Mocha</label><input type="radio" name="group-9e7H9" id="tab-pzn1UE7"><label for="tab-pzn1UE7">Arabica</label></div>',1)),e("div",c,[e("div",u,[s[8]||(s[8]=e("button",{title:"Copy Code",class:"copy"},null,-1)),s[9]||(s[9]=e("span",{class:"lang"},"bash",-1)),e("pre",h,[e("code",null,[e("span",y,[s[0]||(s[0]=e("span",{style:{color:"#B392F0"}},"git",-1)),s[1]||(s[1]=e("span",{style:{color:"#E1E4E8"}}," ",-1)),s[2]||(s[2]=e("span",{style:{color:"#9ECBFF"}},"checkout",-1)),s[3]||(s[3]=e("span",{style:{color:"#E1E4E8"}}," ",-1)),e("span",g,"tags/"+o(a(p)["app-latest-tag"]),1)])])]),e("pre",b,[e("code",null,[e("span",m,[s[4]||(s[4]=e("span",{style:{color:"#6F42C1"}},"git",-1)),s[5]||(s[5]=e("span",{style:{color:"#24292E"}}," ",-1)),s[6]||(s[6]=e("span",{style:{color:"#032F62"}},"checkout",-1)),s[7]||(s[7]=e("span",{style:{color:"#24292E"}}," ",-1)),e("span",E,"tags/"+o(a(p)["app-latest-tag"]),1)])])])]),e("div",f,[s[18]||(s[18]=e("button",{title:"Copy Code",class:"copy"},null,-1)),s[19]||(s[19]=e("span",{class:"lang"},"bash",-1)),e("pre",F,[e("code",null,[e("span",v,[s[10]||(s[10]=e("span",{style:{color:"#B392F0"}},"git",-1)),s[11]||(s[11]=e("span",{style:{color:"#E1E4E8"}}," ",-1)),s[12]||(s[12]=e("span",{style:{color:"#9ECBFF"}},"checkout",-1)),s[13]||(s[13]=e("span",{style:{color:"#E1E4E8"}}," ",-1)),e("span",C,"tags/"+o(a(n)["app-latest-tag"]),1)])])]),e("pre",k,[e("code",null,[e("span",w,[s[14]||(s[14]=e("span",{style:{color:"#6F42C1"}},"git",-1)),s[15]||(s[15]=e("span",{style:{color:"#24292E"}}," ",-1)),s[16]||(s[16]=e("span",{style:{color:"#032F62"}},"checkout",-1)),s[17]||(s[17]=e("span",{style:{color:"#24292E"}}," ",-1)),e("span",P,"tags/"+o(a(n)["app-latest-tag"]),1)])])])]),e("div",B,[s[28]||(s[28]=e("button",{title:"Copy Code",class:"copy"},null,-1)),s[29]||(s[29]=e("span",{class:"lang"},"bash",-1)),e("pre",x,[e("code",null,[e("span",q,[s[20]||(s[20]=e("span",{style:{color:"#B392F0"}},"git",-1)),s[21]||(s[21]=e("span",{style:{color:"#E1E4E8"}}," ",-1)),s[22]||(s[22]=e("span",{style:{color:"#9ECBFF"}},"checkout",-1)),s[23]||(s[23]=e("span",{style:{color:"#E1E4E8"}}," ",-1)),e("span",T,"tags/"+o(a(l)["app-latest-tag"]),1)])])]),e("pre",I,[e("code",null,[e("span",R,[s[24]||(s[24]=e("span",{style:{color:"#6F42C1"}},"git",-1)),s[25]||(s[25]=e("span",{style:{color:"#24292E"}}," ",-1)),s[26]||(s[26]=e("span",{style:{color:"#032F62"}},"checkout",-1)),s[27]||(s[27]=e("span",{style:{color:"#24292E"}}," ",-1)),e("span",A,"tags/"+o(a(l)["app-latest-tag"]),1)])])])])])])]),s[33]||(s[33]=t('<li><p>Build and install the <code>celestia-appd</code> binary with multiplexer support:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span></span></code></pre></div></li><li><p>To check if the binary was successfully installed you can run the binary using the <code>--help</code> flag:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--help</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--help</span></span></code></pre></div></li>',2))]),s[41]||(s[41]=t('<p>You will see an output with the menu for <code>celestia-appd</code>. Learn more on the <a href="/docs-preview/pr-2130/how-to-guides/celestia-app-commands">helpful CLI commands page</a></p><h2 id="installing-a-pre-built-binary" tabindex="-1">Installing a pre-built binary <a class="header-anchor" href="#installing-a-pre-built-binary" aria-label="Permalink to &quot;Installing a pre-built binary&quot;">​</a></h2><p>Installing a pre-built binary is the fastest way to get started with your Celestia consensus node. Releases after celestia-app v1.3.0 should have these binaries available.</p><p>The steps below will download a binary file named <code>celestia-appd</code>. Depending on the setup that you choose during installation, the <code>celestia-appd</code> binary will be available at either:</p><ul><li><code>$HOME/celestia-app-temp/celestia-appd</code></li><li><code>/usr/local/bin/celestia-appd</code></li></ul><p>Pre-built binaries are available for:</p><ul><li>Operating systems: Darwin (Apple), Linux</li><li>Architectures: x86_64 (amd64), arm64</li></ul><p>To install the latest, or a specific version of the pre-built binary you can run this command in your terminal:</p>',8)),e("div",S,[s[38]||(s[38]=e("button",{title:"Copy Code",class:"copy"},null,-1)),s[39]||(s[39]=e("span",{class:"lang"},"bash",-1)),e("pre",D,[e("code",null,[s[35]||(s[35]=t(`<span class="line"><span style="color:#6A737D;"># Install latest version</span></span>
<span class="line"><span style="color:#B392F0;">bash</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span><span style="color:#9ECBFF;"> https://docs.celestia.org/celestia-app.sh)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Install specific version, latest version for Mocha testnet in this example</span></span>
`,8)),e("span",O,[s[34]||(s[34]=t('<span style="color:#B392F0;">bash</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span><span style="color:#9ECBFF;"> https://docs.celestia.org/celestia-app.sh)&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> </span>',14)),e("span",L,o(a(n)["app-latest-tag"]),1)])])]),e("pre",H,[e("code",null,[s[37]||(s[37]=t(`<span class="line"><span style="color:#6A737D;"># Install latest version</span></span>
<span class="line"><span style="color:#6F42C1;">bash</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span><span style="color:#032F62;"> https://docs.celestia.org/celestia-app.sh)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Install specific version, latest version for Mocha testnet in this example</span></span>
`,8)),e("span",M,[s[36]||(s[36]=t('<span style="color:#6F42C1;">bash</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span><span style="color:#032F62;"> https://docs.celestia.org/celestia-app.sh)&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> </span>',14)),e("span",N,o(a(n)["app-latest-tag"]),1)])])])]),s[42]||(s[42]=t('<p>Follow the instructions in the terminal output to choose your installation preferences.</p><p>You will see an output with the menu for <code>celestia-appd</code>. Learn more on the <a href="/docs-preview/pr-2130/how-to-guides/celestia-app-commands">helpful CLI commands page</a></p><p>View <a href="https://github.com/celestiaorg/docs/tree/main/public/celestia-app.sh" target="_blank" rel="noreferrer">the script</a> to learn more about what it is doing.</p><h2 id="ports" tabindex="-1">Ports <a class="header-anchor" href="#ports" aria-label="Permalink to &quot;Ports&quot;">​</a></h2><p>When interacting with a consensus node, you may need to open ports on your machine to allow communication between nodes, such as bridge nodes. It is essential that specific ports are accessible. Make sure that your firewall allows connections to the correct ports.</p><p>If you run a node on a cloud server, make sure that the ports are open on the server&#39;s firewall. If you run a node at home, make sure that your router allows connections to the correct ports.</p><p>For example, validator ports 9090 and 26657 need to be accessible by the bridge, and port 2121 is required for P2P connections for all node types.</p><p>The following ports are used by Celestia app nodes:</p><table><thead><tr><th>Port</th><th>Protocol</th><th>Address</th><th>Description</th><th>Enabled by default on node</th><th>Flag</th></tr></thead><tbody><tr><td>1317</td><td>HTTP</td><td>0.0.0.0</td><td>REST API (gRPC-gateway) - HTTP endpoints for blockchain queries</td><td>true</td><td><code>--api.address string</code></td></tr><tr><td>2121</td><td>TCP/UDP</td><td>127.0.0.1</td><td>P2P networking - Communication between nodes in the network</td><td>true</td><td>N/A</td></tr><tr><td>9090</td><td>HTTP</td><td>0.0.0.0</td><td>gRPC server - Programmatic access for advanced integrations</td><td>true</td><td><code>--grpc.address string</code></td></tr><tr><td>26657</td><td>TCP</td><td>127.0.0.1</td><td>Tendermint RPC - JSON-RPC server for blockchain queries and txs</td><td>false (only open to localhost)</td><td><code>--rpc.laddr string</code></td></tr></tbody></table><h2 id="understanding-port-exposure-and-security" tabindex="-1">Understanding port exposure and security <a class="header-anchor" href="#understanding-port-exposure-and-security" aria-label="Permalink to &quot;Understanding port exposure and security&quot;">​</a></h2><h3 id="external-exposure-requirements" tabindex="-1">External exposure requirements <a class="header-anchor" href="#external-exposure-requirements" aria-label="Permalink to &quot;External exposure requirements&quot;">​</a></h3><p>When setting up your consensus node, understanding which ports need external access is crucial for both functionality and security:</p><p><strong>Ports that typically need external exposure:</strong></p><ul><li><strong>Port 2121</strong>: Required for P2P connectivity with other nodes in the network</li><li><strong>Port 9090</strong>: Needed if your node will serve gRPC clients (like bridge nodes)</li><li><strong>Port 26657</strong>: Required for external RPC access (enable with <code>--rpc.laddr tcp://0.0.0.0:26657</code>)</li></ul><p><strong>Ports for internal/localhost access:</strong></p><ul><li><strong>Port 1317</strong>: REST API, often used internally or through proxies</li><li><strong>Port 26657</strong>: By default only listens on localhost for security</li></ul><h3 id="app-vs-core-endpoint-distinction" tabindex="-1">App vs Core endpoint distinction <a class="header-anchor" href="#app-vs-core-endpoint-distinction" aria-label="Permalink to &quot;App vs Core endpoint distinction&quot;">​</a></h3><p>Celestia consensus nodes expose different types of endpoints:</p><p><strong>App-level endpoints</strong> (Cosmos SDK):</p><ul><li><strong>Port 1317</strong>: REST API using gRPC-gateway for HTTP-based blockchain queries</li><li><strong>Port 9090</strong>: gRPC server for efficient programmatic access to blockchain data</li></ul><p><strong>Core-level endpoints</strong> (Tendermint/CometBFT):</p><ul><li><strong>Port 26657</strong>: Tendermint RPC for consensus-layer operations, transaction submission, and blockchain queries</li><li><strong>Port 2121</strong>: P2P networking for consensus communication between validators and nodes</li></ul><p>For bridge nodes connecting to your consensus node, they typically use the gRPC endpoint (port 9090) to access blockchain data efficiently. The distinction matters because app-level endpoints provide access to application state and transactions, while core-level endpoints handle consensus operations and network communication.</p><p>For more details on Cosmos SDK APIs, see the <a href="https://docs.cosmos.network/main/core/grpc_rest" target="_blank" rel="noreferrer">Cosmos SDK documentation</a>.</p><h2 id="next-steps" tabindex="-1">Next steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next steps&quot;">​</a></h2><p>Now that you&#39;ve installed <code>celestia-appd</code>, learn how to run a <a href="/docs-preview/pr-2130/how-to-guides/consensus-node">consensus</a> and <a href="/docs-preview/pr-2130/how-to-guides/validator-node">validator</a> node.</p>',26))]))}});export{Y as __pageData,j as default};
