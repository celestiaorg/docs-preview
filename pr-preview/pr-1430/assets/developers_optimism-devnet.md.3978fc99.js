import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.212d62c2.js";const E=JSON.parse('{"title":"Deploy an OP Stack devnet","description":"Start your own devnet with a modified version of optimism-bedrock.","frontmatter":{"description":"Start your own devnet with a modified version of optimism-bedrock.","head":[["meta",{"name":"og:title","content":"Deploy an OP Stack devnet | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"developers/optimism-devnet.md","filePath":"developers/optimism-devnet.md","lastUpdated":1708607087000}'),l={name:"developers/optimism-devnet.md"},o=e(`<h1 id="deploy-an-op-stack-devnet" tabindex="-1">Deploy an OP Stack devnet <a class="header-anchor" href="#deploy-an-op-stack-devnet" aria-label="Permalink to &quot;Deploy an OP Stack devnet&quot;">​</a></h1><p>This guide will show you how to run your own OP Stack devnet.</p><h2 id="dependency-setup" tabindex="-1">Dependency setup <a class="header-anchor" href="#dependency-setup" aria-label="Permalink to &quot;Dependency setup&quot;">​</a></h2><h3 id="environment-setup-and-golang-installation" tabindex="-1">Environment setup and Golang installation <a class="header-anchor" href="#environment-setup-and-golang-installation" aria-label="Permalink to &quot;Environment setup and Golang installation&quot;">​</a></h3><p>First, <a href="./../nodes/environment">install dependencies for Celestia software</a> and for <a href="https://community.optimism.io/docs/developers/build/dev-node/" target="_blank" rel="noreferrer">OP Stack</a>.</p><h3 id="clone-repository" tabindex="-1">Clone repository <a class="header-anchor" href="#clone-repository" aria-label="Permalink to &quot;Clone repository&quot;">​</a></h3><p>Next, clone the repo:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/celestiaorg/optimism</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">optimism</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/celestiaorg/optimism</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">optimism</span></span></code></pre></div><p>Check out to the version for either the stable version or upstream version:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-mnHap" id="tab-TECUxtw" checked="checked"><label for="tab-TECUxtw">v1.1.0-OP_v1.5.0-CN_v0.12.4</label><input type="radio" name="group-mnHap" id="tab-zRaZAF2"><label for="tab-zRaZAF2">celestia-develop</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tags/v1.1.0-OP_v1.5.0-CN_v0.12.4</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recursive</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tags/v1.1.0-OP_v1.5.0-CN_v0.12.4</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recursive</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-develop</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recursive</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-develop</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recursive</span></span></code></pre></div></div></div><h2 id="build-devnet" tabindex="-1">Build devnet <a class="header-anchor" href="#build-devnet" aria-label="Permalink to &quot;Build devnet&quot;">​</a></h2><p>Build TypeScript definitions for TS dependencies:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">optimism</span></span>
<span class="line"><span style="color:#B392F0;">make</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">optimism</span></span>
<span class="line"><span style="color:#6F42C1;">make</span></span></code></pre></div><p>Set environment variables to start network:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> SEQUENCER_BATCH_INBOX_ADDRESS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0xff00000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> L2OO_ADDRESS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0x70997970C51812dc3A010C7d01b50e0d17dc79C8</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> SEQUENCER_BATCH_INBOX_ADDRESS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0xff00000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> L2OO_ADDRESS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0x70997970C51812dc3A010C7d01b50e0d17dc79C8</span></span></code></pre></div><h3 id="start-devnet" tabindex="-1">Start devnet <a class="header-anchor" href="#start-devnet" aria-label="Permalink to &quot;Start devnet&quot;">​</a></h3><p>Start the network by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-up</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-up</span></span></code></pre></div><p>This starts up the layer 1 (ETH), layer 2 (<code>op-geth</code>), data availability layer (Celestia), the sequencer (<code>op-node</code>), batch submitter (<code>op-batcher</code>), state commitment service (<code>op-proposer</code>).</p><h3 id="view-the-logs-of-the-devnet" tabindex="-1">View the logs of the devnet <a class="header-anchor" href="#view-the-logs-of-the-devnet" aria-label="Permalink to &quot;View the logs of the devnet&quot;">​</a></h3><p>If you&#39;d like to view the logs of the devnet, run the following command from the root of the Optimism directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-logs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-logs</span></span></code></pre></div><details class="details custom-block"><summary>Optional: Docker tips</summary><h3 id="stop-devnet" tabindex="-1">Stop devnet <a class="header-anchor" href="#stop-devnet" aria-label="Permalink to &quot;Stop devnet&quot;">​</a></h3><p>If you&#39;d like to start the network over, use the following command to safely shut down all of the containers:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-down</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-down</span></span></code></pre></div><p>Then clean out the old config:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">devnet-clean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">devnet-clean</span></span></code></pre></div><h3 id="viewing-containers" tabindex="-1">Viewing containers <a class="header-anchor" href="#viewing-containers" aria-label="Permalink to &quot;Viewing containers&quot;">​</a></h3><p>To view the containers running, send:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ps</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ps</span></span></code></pre></div><p>Find the container ID of the <code>ops-bedrock_op-batcher_1</code> and run the following to follow the logs:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">container-i</span><span style="color:#E1E4E8;">d</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">logs</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">container-i</span><span style="color:#24292E;">d</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>In a new terminal, find the container ID of the <code>ghcr.io/celestiaorg/local-celestia-devnet:main</code> and run the following to follow the logs:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">container-i</span><span style="color:#E1E4E8;">d</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">logs</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">container-i</span><span style="color:#24292E;">d</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>You can do the same for other containers as you explore the stack.</p></details><h2 id="find-a-transaction" tabindex="-1">Find a transaction <a class="header-anchor" href="#find-a-transaction" aria-label="Permalink to &quot;Find a transaction&quot;">​</a></h2><p>Now, we&#39;ll check for a recent transaction on the L1 with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cast</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">latest</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rpc-url</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">localhost:8545</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cast</span><span style="color:#24292E;"> </span><span style="color:#032F62;">block</span><span style="color:#24292E;"> </span><span style="color:#032F62;">latest</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rpc-url</span><span style="color:#24292E;"> </span><span style="color:#032F62;">localhost:8545</span></span></code></pre></div><p>Output of a block that contains a transaction will look like this:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">baseFeePerGas        7</span></span>
<span class="line"><span style="color:#79B8FF;">difficulty           2</span></span>
<span class="line"><span style="color:#79B8FF;">extraData            0xd883010d04846765746888676f312e32312e33856c696e7578000000000000006b3afa42dce1f87f1f07a1ef569c4d43e41738ef93c865098bfa1458645f384e2e4498bcfe4ad9353ff1913a2e16162f496fafe5b0939a6c78fb5b503248d6da01</span></span>
<span class="line"><span style="color:#79B8FF;">gasLimit             30000000</span></span>
<span class="line"><span style="color:#79B8FF;">gasUsed              21568</span></span>
<span class="line"><span style="color:#79B8FF;">hash                 0x1cb54d2369752ef73511c202ff9cdfd0eadf3a77b7aef0092bea63f2b5d57659</span></span>
<span class="line"><span style="color:#79B8FF;">logsBloom            0xspan></span>
<span class="line"><span style="color:#79B8FF;">miner                0x0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#79B8FF;">mixHash              0x0000000000000000000000000000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#79B8FF;">nonce                0x0000000000000000</span></span>
<span class="line"><span style="color:#79B8FF;">number               1141</span></span>
<span class="line"><span style="color:#79B8FF;">parentHash           0x664bf4bb4a57dd5768a0a98991d77c58fb7a4e164c2581c79fb33ce9c3d4c250</span></span>
<span class="line"><span style="color:#79B8FF;">receiptsRoot         0xaf8ff6af1180c8be9e4e8f3a5f882b3b227233f4abbefa479836d3721682a389</span></span>
<span class="line"><span style="color:#79B8FF;">sealFields           []</span></span>
<span class="line"><span style="color:#79B8FF;">sha3Uncles           0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347</span></span>
<span class="line"><span style="color:#79B8FF;">size                 767</span></span>
<span class="line"><span style="color:#79B8FF;">stateRoot            0xd4b998a35d20d98ed3488221f0c161a0a9572d3de66399482553c8e3d2fae751</span></span>
<span class="line"><span style="color:#79B8FF;">timestamp            1699638350</span></span>
<span class="line"><span style="color:#79B8FF;">withdrawalsRoot</span></span>
<span class="line"><span style="color:#79B8FF;">totalDifficulty      2283</span></span>
<span class="line"><span style="color:#79B8FF;">transactions:        [</span></span>
<span class="line"><span style="color:#79B8FF;">  0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span>
<span class="line"><span style="color:#79B8FF;">]</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#005CC5;">baseFeePerGas        7</span></span>
<span class="line"><span style="color:#005CC5;">difficulty           2</span></span>
<span class="line"><span style="color:#005CC5;">extraData            0xd883010d04846765746888676f312e32312e33856c696e7578000000000000006b3afa42dce1f87f1f07a1ef569c4d43e41738ef93c865098bfa1458645f384e2e4498bcfe4ad9353ff1913a2e16162f496fafe5b0939a6c78fb5b503248d6da01</span></span>
<span class="line"><span style="color:#005CC5;">gasLimit             30000000</span></span>
<span class="line"><span style="color:#005CC5;">gasUsed              21568</span></span>
<span class="line"><span style="color:#005CC5;">hash                 0x1cb54d2369752ef73511c202ff9cdfd0eadf3a77b7aef0092bea63f2b5d57659</span></span>
<span class="line"><span style="color:#005CC5;">logsBloom            0xspan></span>
<span class="line"><span style="color:#005CC5;">miner                0x0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">mixHash              0x0000000000000000000000000000000000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">nonce                0x0000000000000000</span></span>
<span class="line"><span style="color:#005CC5;">number               1141</span></span>
<span class="line"><span style="color:#005CC5;">parentHash           0x664bf4bb4a57dd5768a0a98991d77c58fb7a4e164c2581c79fb33ce9c3d4c250</span></span>
<span class="line"><span style="color:#005CC5;">receiptsRoot         0xaf8ff6af1180c8be9e4e8f3a5f882b3b227233f4abbefa479836d3721682a389</span></span>
<span class="line"><span style="color:#005CC5;">sealFields           []</span></span>
<span class="line"><span style="color:#005CC5;">sha3Uncles           0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347</span></span>
<span class="line"><span style="color:#005CC5;">size                 767</span></span>
<span class="line"><span style="color:#005CC5;">stateRoot            0xd4b998a35d20d98ed3488221f0c161a0a9572d3de66399482553c8e3d2fae751</span></span>
<span class="line"><span style="color:#005CC5;">timestamp            1699638350</span></span>
<span class="line"><span style="color:#005CC5;">withdrawalsRoot</span></span>
<span class="line"><span style="color:#005CC5;">totalDifficulty      2283</span></span>
<span class="line"><span style="color:#005CC5;">transactions:        [</span></span>
<span class="line"><span style="color:#005CC5;">  0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span>
<span class="line"><span style="color:#005CC5;">]</span></span></code></pre></div><p>Copy the transaction hash from <code>transactions: &lt;transaction-hash&gt;</code> and set it as a variable:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> TX_HASH</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> TX_HASH</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0x79a0a7a1b4936aafe7a37dbfb07a6a9e55c145a4ed6fd54f962649b4b7db8de7</span></span></code></pre></div><h2 id="read-the-transaction-call-data" tabindex="-1">Read the transaction call data <a class="header-anchor" href="#read-the-transaction-call-data" aria-label="Permalink to &quot;Read the transaction call data&quot;">​</a></h2><p>Now read the transaction call data on the L1:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cast</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tx</span><span style="color:#E1E4E8;"> $TX_HASH </span><span style="color:#79B8FF;">--rpc-url</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">localhost:8545</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cast</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tx</span><span style="color:#24292E;"> $TX_HASH </span><span style="color:#005CC5;">--rpc-url</span><span style="color:#24292E;"> </span><span style="color:#032F62;">localhost:8545</span></span></code></pre></div><p>The output will look similar to below:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">blockHash            0x9f4dfae061b5ddd86f95a81be5daa0d7fe32e7f7f770f86dc375e0007d249bd2</span></span>
<span class="line"><span style="color:#79B8FF;">blockNumber          24</span></span>
<span class="line"><span style="color:#79B8FF;">from                 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC</span></span>
<span class="line"><span style="color:#79B8FF;">gas                  21572</span></span>
<span class="line"><span style="color:#79B8FF;">gasPrice             1040676758</span></span>
<span class="line"><span style="color:#79B8FF;">hash                 0xadd3a5dc0b8c605aeac891098e87cbaff43bb642896ebbf74f964c0690e46df2</span></span>
<span class="line"><span style="color:#79B8FF;">input                0xce3500000000000000769074a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#79B8FF;">nonce                4</span></span>
<span class="line"><span style="color:#79B8FF;">r                    0xaf5c1505c7dfcebca94d9a6a8c0caf99b6c87a8ed6d6c0b3161c9026f270a84f</span></span>
<span class="line"><span style="color:#79B8FF;">s                    0x383ed2debf9f9055920cd7340418dda7e2bca6b989eb6992d83d123d4e322f2a</span></span>
<span class="line"><span style="color:#79B8FF;">to                   0xFf00000000000000000000000000000000000901</span></span>
<span class="line"><span style="color:#79B8FF;">transactionIndex     0</span></span>
<span class="line"><span style="color:#79B8FF;">v                    0</span></span>
<span class="line"><span style="color:#79B8FF;">value                0</span></span>
<span class="line"><span style="color:#79B8FF;">yParity              0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">blockHash            0x9f4dfae061b5ddd86f95a81be5daa0d7fe32e7f7f770f86dc375e0007d249bd2</span></span>
<span class="line"><span style="color:#005CC5;">blockNumber          24</span></span>
<span class="line"><span style="color:#005CC5;">from                 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC</span></span>
<span class="line"><span style="color:#005CC5;">gas                  21572</span></span>
<span class="line"><span style="color:#005CC5;">gasPrice             1040676758</span></span>
<span class="line"><span style="color:#005CC5;">hash                 0xadd3a5dc0b8c605aeac891098e87cbaff43bb642896ebbf74f964c0690e46df2</span></span>
<span class="line"><span style="color:#005CC5;">input                0xce3500000000000000769074a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#005CC5;">nonce                4</span></span>
<span class="line"><span style="color:#005CC5;">r                    0xaf5c1505c7dfcebca94d9a6a8c0caf99b6c87a8ed6d6c0b3161c9026f270a84f</span></span>
<span class="line"><span style="color:#005CC5;">s                    0x383ed2debf9f9055920cd7340418dda7e2bca6b989eb6992d83d123d4e322f2a</span></span>
<span class="line"><span style="color:#005CC5;">to                   0xFf00000000000000000000000000000000000901</span></span>
<span class="line"><span style="color:#005CC5;">transactionIndex     0</span></span>
<span class="line"><span style="color:#005CC5;">v                    0</span></span>
<span class="line"><span style="color:#005CC5;">value                0</span></span>
<span class="line"><span style="color:#005CC5;">yParity              0</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You are looking for a batcher transaction to the address <code>0xFf00000000000000000000000000000000000901</code>.</p></div><p>First, remove the prefix <code>0xce</code>. Now, set the <code>input</code> as the <code>INPUT</code> variable and encode it as base64:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> INPUT</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">ce3500000000000000769074a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> ENCODED_INPUT</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#79B8FF;">echo</span><span style="color:#9ECBFF;"> &quot;</span><span style="color:#E1E4E8;">$INPUT</span><span style="color:#9ECBFF;">&quot; </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">xxd</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">base64</span><span style="color:#9ECBFF;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> INPUT</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">ce3500000000000000769074a923011bdda721eacc34c8a77c69c10f2b6c8e659f987e82f217a5340f</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> ENCODED_INPUT</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#005CC5;">echo</span><span style="color:#032F62;"> &quot;</span><span style="color:#24292E;">$INPUT</span><span style="color:#032F62;">&quot; </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">xxd</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-r</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-p</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">base64</span><span style="color:#032F62;">)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Remember to remove the <code>0xce</code> prefix!</p></div><h2 id="find-the-data-on-celestia" tabindex="-1">Find the data on Celestia <a class="header-anchor" href="#find-the-data-on-celestia" aria-label="Permalink to &quot;Find the data on Celestia&quot;">​</a></h2><p>Clone the <code>go-da</code> repository:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/rollkit/go-da.git</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">go-da/proto/da</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/rollkit/go-da.git</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">go-da/proto/da</span></span></code></pre></div><p>Now, from <code>go-da/proto/da</code> run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">grpcurl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-proto</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">da.proto</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-plaintext</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;{</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">ids</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">: [{</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">value</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">: </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$ENCODED_INPUT</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">}]}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">127.0</span><span style="color:#9ECBFF;">.0.1:26650</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">da.DAService.Get</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">grpcurl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-proto</span><span style="color:#24292E;"> </span><span style="color:#032F62;">da.proto</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-plaintext</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;{</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">ids</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">: [{</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">value</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$ENCODED_INPUT</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">}]}&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">127.0</span><span style="color:#032F62;">.0.1:26650</span><span style="color:#24292E;"> </span><span style="color:#032F62;">da.DAService.Get</span></span></code></pre></div><p>Your result will look similar to the below!</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;blobs&quot;: [</span></span>
<span class="line"><span style="color:#79B8FF;">    {</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;value&quot;: &quot;AKUumhJ8FnuyVrBs38FDKEIAAAAAAZB42trhw/DDc4GFAlv4klkv5Zh4E16mmO5fpNOS1f5wzpds8YK3S0Rvs4ULLJj13euw+Ovdv6Q23zuV1ShROEvk5aptIT7bGmZunvc1OiKwJTXVbN0BiGm6k2zNWq78cNsT2ez3+nzQq84Ds28or/aKz/o1w4NpV7w4caZtgJomX71w96m63+xzYnarXLu7WWvRrwbeb6cW8R93YHXt1r4+TXCBGVe76obzf5JLTNu22gksD2cL+83D8DGjX0FKcwZD0VofkGmboKY1uTddu8704s2MwgNNe09s1bzw+n9Fq6fKFw7pvwJL200eCS0oFJ3HfPAEywnlgyyGQc89dh+98GD5TrdU4aNql9afmW+sDzJtC9S0fzLWYROOS0bvK3W7EvNpmWXe5qrdzKlBmv1LZi4ofrrxLHGmbYOaJhHsEn+B81lGUh33HDet8K9nVKKSF2+W3Xul6uPSxydPBwsv2GHskR+yfUlDbvyl1ROTvtS1zXlpEPz0M1e/RIIt57fVj0Gm7TgACAAA//+Qdel2AQ==&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">    }</span></span>
<span class="line"><span style="color:#79B8FF;">  ]</span></span>
<span class="line"><span style="color:#79B8FF;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">{</span></span>
<span class="line"><span style="color:#005CC5;">  &quot;blobs&quot;: [</span></span>
<span class="line"><span style="color:#005CC5;">    {</span></span>
<span class="line"><span style="color:#005CC5;">      &quot;value&quot;: &quot;AKUumhJ8FnuyVrBs38FDKEIAAAAAAZB42trhw/DDc4GFAlv4klkv5Zh4E16mmO5fpNOS1f5wzpds8YK3S0Rvs4ULLJj13euw+Ovdv6Q23zuV1ShROEvk5aptIT7bGmZunvc1OiKwJTXVbN0BiGm6k2zNWq78cNsT2ez3+nzQq84Ds28or/aKz/o1w4NpV7w4caZtgJomX71w96m63+xzYnarXLu7WWvRrwbeb6cW8R93YHXt1r4+TXCBGVe76obzf5JLTNu22gksD2cL+83D8DGjX0FKcwZD0VofkGmboKY1uTddu8704s2MwgNNe09s1bzw+n9Fq6fKFw7pvwJL200eCS0oFJ3HfPAEywnlgyyGQc89dh+98GD5TrdU4aNql9afmW+sDzJtC9S0fzLWYROOS0bvK3W7EvNpmWXe5qrdzKlBmv1LZi4ofrrxLHGmbYOaJhHsEn+B81lGUh33HDet8K9nVKKSF2+W3Xul6uPSxydPBwsv2GHskR+yfUlDbvyl1ROTvtS1zXlpEPz0M1e/RIIt57fVj0Gm7TgACAAA//+Qdel2AQ==&quot;</span></span>
<span class="line"><span style="color:#005CC5;">    }</span></span>
<span class="line"><span style="color:#005CC5;">  ]</span></span>
<span class="line"><span style="color:#005CC5;">}</span></span></code></pre></div><h2 id="ethereum-fallback-mechanism-in-op-stack" tabindex="-1">Ethereum fallback mechanism in OP Stack <a class="header-anchor" href="#ethereum-fallback-mechanism-in-op-stack" aria-label="Permalink to &quot;Ethereum fallback mechanism in OP Stack&quot;">​</a></h2><p>The <a href="./ethereum-fallback">Ethereum fallback mechanism</a> allows rollups to &quot;fall back&quot; to Ethereum or another EVM chain in the case of downtime or errors submitting data to Celestia.</p><h3 id="implementation-of-fallback" tabindex="-1">Implementation of fallback <a class="header-anchor" href="#implementation-of-fallback" aria-label="Permalink to &quot;Implementation of fallback&quot;">​</a></h3><p>The Ethereum fallback mechanism is implemented in the <a href="https://github.com/celestiaorg/optimism/tree/release-v1.1.0" target="_blank" rel="noreferrer">celestiaorg/optimism</a> v1.1.0 release.</p><p>The <code>op-batcher/batcher/driver.go</code> and <code>op-node/rollup/derive/calldata_source.go</code> files are part of the Ethereum fallback mechanism in the <code>op-batcher</code> and <code>op-node</code> respectively.</p><p>In <a href="https://github.com/celestiaorg/optimism/blob/release-v1.1.0/op-batcher/batcher/driver.go#L405-L419" target="_blank" rel="noreferrer"><code>driver.go</code>, the <code>calldataTxCandidate</code> function is responsible for the write path</a> of the Ethereum fallback. This function creates and submits a transaction to the batch inbox address with the given data. It uses the underlying <code>txmgr</code> to handle transaction sending and gas price management.</p><p>If the transaction data can be published as a blob to Celestia, it replaces the calldata with a blob identifier and sends the transaction with this data. If it cannot be published to Celestia, it falls back to Ethereum without any change to the transaction.</p><p>The blob identifier starts with the special prefix <code>0xce</code>, which was chosen a mnemonic for Celestia, and indicates that the remaining data has to interpreted as a little-endian encoded Block Height (8 bytes) and Blob Commitment (32 bytes). The combination of these can later be used to retrieve the original calldata from Celestia.</p><table><thead><tr><th>Prefix</th><th>8 bytes</th><th>32 bytes</th></tr></thead><tbody><tr><td>0xce</td><td>Block Height</td><td>Blob Commitment</td></tr></tbody></table><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> (l </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">BatchSubmitter) </span><span style="color:#B392F0;">sendTransaction</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    txdata txData,</span></span>
<span class="line"><span style="color:#E1E4E8;">    queue </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">txmgr.Queue[txData],</span></span>
<span class="line"><span style="color:#E1E4E8;">    receiptsCh </span><span style="color:#F97583;">chan</span><span style="color:#E1E4E8;"> txmgr.TxReceipt[txData],</span></span>
<span class="line"><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> (l </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">BatchSubmitter) </span><span style="color:#6F42C1;">sendTransaction</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    txdata txData,</span></span>
<span class="line"><span style="color:#24292E;">    queue </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">txmgr.Queue[txData],</span></span>
<span class="line"><span style="color:#24292E;">    receiptsCh </span><span style="color:#D73A49;">chan</span><span style="color:#24292E;"> txmgr.TxReceipt[txData],</span></span>
<span class="line"><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>In <code>calldata_source.go</code>, <a href="https://github.com/celestiaorg/optimism/blob/release-v1.1.0/op-node/rollup/derive/calldata_source.go#L102-L139" target="_blank" rel="noreferrer">the <code>DataFromEVMTransactions</code> function defines the read path</a> of the Ethereum fallback. This function filters all of the transactions and returns the calldata from transactions that are sent to the batch inbox address from the batch sender address.</p><p>If the calldata matches the version prefix <code>0xce</code>, it is decoded as a blob identifier, the original calldata is retrieved from Celestia and returned for derivation. If the calldata does not match the prefix, the entire calldata is returned for derivation.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataFromEVMTransactions</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    config </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">rollup.Config,</span></span>
<span class="line"><span style="color:#E1E4E8;">    batcherAddr common.Address,</span></span>
<span class="line"><span style="color:#E1E4E8;">    txs types.Transactions,</span></span>
<span class="line"><span style="color:#E1E4E8;">    log log.Logger</span></span>
<span class="line"><span style="color:#E1E4E8;">) ([]eth.Data, </span><span style="color:#F97583;">error</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataFromEVMTransactions</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    config </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">rollup.Config,</span></span>
<span class="line"><span style="color:#24292E;">    batcherAddr common.Address,</span></span>
<span class="line"><span style="color:#24292E;">    txs types.Transactions,</span></span>
<span class="line"><span style="color:#24292E;">    log log.Logger</span></span>
<span class="line"><span style="color:#24292E;">) ([]eth.Data, </span><span style="color:#D73A49;">error</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>These two functions work together to ensure that the Ethereum fallback mechanism operates correctly, allowing the rollup to continue functioning even during periods of downtime on Celestia.</p><h3 id="testing-the-fallback" tabindex="-1">Testing the fallback <a class="header-anchor" href="#testing-the-fallback" aria-label="Permalink to &quot;Testing the fallback&quot;">​</a></h3><p>Testing out the Ethereum fallback mechanism can be done with the <code>go-da</code> tool. Triggering a simultaneous blob transaction will cause the <code>op-batcher</code> blob transaction to fail, with an <code>incorrect account sequence</code> error, which triggers a fallback to Ethereum.</p><p>To trigger the transaction, send this command from the same <code>go/proto/da</code> directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">grpcurl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-proto</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">da.proto</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-plaintext</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;blobs&quot;: [{&quot;value&quot;: &quot;SGVsbG8gd28ybGQh&quot;}]}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">127.0</span><span style="color:#9ECBFF;">.0.1:26650</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">da.DAService.Submit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">grpcurl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-proto</span><span style="color:#24292E;"> </span><span style="color:#032F62;">da.proto</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-plaintext</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;blobs&quot;: [{&quot;value&quot;: &quot;SGVsbG8gd28ybGQh&quot;}]}&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">127.0</span><span style="color:#032F62;">.0.1:26650</span><span style="color:#24292E;"> </span><span style="color:#032F62;">da.DAService.Submit</span></span></code></pre></div><p>Alternatively, you can shut off the <code>local-celestia-devnet</code> and see that the OP Stack devnet logs show that the rollup has fallen back to the L1, in this case Ethereum, for posting data.</p><h2 id="span-batches" tabindex="-1">Span batches <a class="header-anchor" href="#span-batches" aria-label="Permalink to &quot;Span batches&quot;">​</a></h2><p>Span batches can be enabled by setting <code>OP_BATCHER_BATCH_TYPE: 1</code> in your <code>docker-compose.yml</code> file.</p><p>Note that this requires the Delta activation time to be configured. For your devnet, you should set <code>&quot;l2GenesisDeltaTimeOffset&quot;: &quot;0x0&quot;,</code> in <code>devnetL1-template.json</code>. This will enable span batches and can be tested by grepping <code>docker compose logs -f | grep batch_type</code> which should include <code>batch_type=SpanBatch</code> and <code>batch_type=1</code>.</p>`,68),p=[o];function t(c,r,i,d,y,h){return a(),n("div",null,p)}const u=s(l,[["render",t]]);export{E as __pageData,u as default};
