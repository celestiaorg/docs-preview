import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.212d62c2.js";const h=JSON.parse('{"title":"Blobstream Orchestrator","description":"Learn about the Blobstream Orchestrator.","frontmatter":{"sidebar_label":"Blobstream Orchestrator","description":"Learn about the Blobstream Orchestrator.","head":[["meta",{"name":"og:title","content":"Blobstream Orchestrator | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"nodes/blobstream-orchestrator.md","filePath":"nodes/blobstream-orchestrator.md","lastUpdated":1708607087000}'),e={name:"nodes/blobstream-orchestrator.md"},l=o(`<h1 id="blobstream-orchestrator" tabindex="-1">Blobstream Orchestrator <a class="header-anchor" href="#blobstream-orchestrator" aria-label="Permalink to &quot;Blobstream Orchestrator&quot;">​</a></h1><p>The role of the orchestrator is to sign attestations using its corresponding validator EVM private key. These attestations are generated within the Blobstream module of the Celestia-app state machine. To learn more about what attestations are, you can refer to <a href="https://github.com/celestiaorg/celestia-app/tree/main/x/blobstream" target="_blank" rel="noreferrer">the Blobstream overview</a>.</p><blockquote><p><strong><em>NOTE:</em></strong> Running a Blobstream orchestrator is an incredibly important aspect of running a validator. The signatures created there will be used to commit to block data in the exact way as the signatures included in the commit. Not running an orchestrator potentially has the same consequences (enforced by social slashing and eventually the protocol itself) as not signing a block.</p></blockquote><h2 id="how-it-works" tabindex="-1">How it works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How it works&quot;">​</a></h2><p>The orchestrator does the following:</p><ol><li>Connect to a Celestia-app full node or validator node via RPC and gRPC and wait for new attestations</li><li>Once an attestation is created inside the Blobstream state machine, the orchestrator queries it.</li><li>After getting the attestation, the orchestrator signs it using the provided EVM private key. The private key should correspond to the EVM address provided when creating the validator. Read <a href="https://docs.celestia.org/nodes/blobstream-keys/" target="_blank" rel="noreferrer">more about Blobstream keys</a>.</li><li>Then, the orchestrator pushes its signature to the P2P network it is connected to, via adding it as a DHT value.</li><li>Listen for new attestations and go back to step 2.</li></ol><p>The orchestrator connects to a separate P2P network from the consensus or the data availability networks.</p><p>The bootstrapper node for the Mocha testnet is:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">/dns/bootstr-0-mocha-blobstream.celestia-mocha.com/tcp/30000/p2p/12D3KooWLrw6EQgDwvgqrqT8wLNJoQYN3SDAzaAxJgyiTa2xowyF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/dns/bootstr-0-mocha-blobstream.celestia-mocha.com/tcp/30000/p2p/12D3KooWLrw6EQgDwvgqrqT8wLNJoQYN3SDAzaAxJgyiTa2xowyF</span></span></code></pre></div><p>Make sure to specify the bootstrapper using the <code>--p2p.bootstrappers</code> flag when running the orchestrator or set it in the <code>&lt;orchestrator_home&gt;/config/config.toml</code> config file.</p><p>This means that even if the consensus node is already connected to the consensus network, if the orchestrator doesn&#39;t start with a list of bootstrapper to its specific network, then, it will not work and will output the following logs:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">I[2023-04-26|00:04:08.175] waiting for routing table to populate        targetnumberofpeers=1 currentcount=0</span></span>
<span class="line"><span style="color:#e1e4e8;">I[2023-04-26|00:04:18.175] waiting for routing table to populate        targetnumberofpeers=1 currentcount=0</span></span>
<span class="line"><span style="color:#e1e4e8;">I[2023-04-26|00:04:28.175] waiting for routing table to populate        targetnumberofpeers=1 currentcount=0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">I[2023-04-26|00:04:08.175] waiting for routing table to populate        targetnumberofpeers=1 currentcount=0</span></span>
<span class="line"><span style="color:#24292e;">I[2023-04-26|00:04:18.175] waiting for routing table to populate        targetnumberofpeers=1 currentcount=0</span></span>
<span class="line"><span style="color:#24292e;">I[2023-04-26|00:04:28.175] waiting for routing table to populate        targetnumberofpeers=1 currentcount=0</span></span></code></pre></div><h2 id="how-to-run" tabindex="-1">How to run <a class="header-anchor" href="#how-to-run" aria-label="Permalink to &quot;How to run&quot;">​</a></h2><h3 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h3><p>To run an orchestrator, you will need to have access to the following:</p><ul><li>Access to your EVM address private key. This address doesn&#39;t need to be funded in any network. If yours is not yet set, check the <a href="#register-evm-address">register an EVM address</a> section.</li><li>A list of bootstrappers for the P2P network.</li><li>Access to your consensus node RPC and gRPC ports.</li></ul><h3 id="install-the-blobstream-binary" tabindex="-1">Install the Blobstream binary <a class="header-anchor" href="#install-the-blobstream-binary" aria-label="Permalink to &quot;Install the Blobstream binary&quot;">​</a></h3><p>Make sure to have the Blobstream binary installed. Check <a href="https://docs.celestia.org/nodes/blobstream-binary" target="_blank" rel="noreferrer">the Blobstream binary page</a> for more details.</p><h3 id="init-the-store" tabindex="-1">Init the store <a class="header-anchor" href="#init-the-store" aria-label="Permalink to &quot;Init the store&quot;">​</a></h3><p>Before starting the orchestrator, we will need to init the store:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">blobstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">blobstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span></code></pre></div><p>By default, the store will be created under <code>~/.orchestrator</code>. However, if you want to specify a custom location, you can use the <code>--home</code> flag. Or, you can use the following environment variable:</p><table><thead><tr><th>Variable</th><th>Explanation</th><th>Default value</th><th>Required</th></tr></thead><tbody><tr><td><code>ORCHESTRATOR_HOME</code></td><td>Home directory for the orchestrator</td><td><code>~/.orchestrator</code></td><td>Optional</td></tr></tbody></table><h3 id="add-keys" tabindex="-1">Add keys <a class="header-anchor" href="#add-keys" aria-label="Permalink to &quot;Add keys&quot;">​</a></h3><p>In order for the orchestrator to start, it will need two private keys:</p><ul><li>EVM private key</li><li>P2P private key</li></ul><p>The EVM private key is the most important one since it needs to correspond to the EVM address provided when creating the validator.</p><p>The P2P private key is optional, and a new one will be generated automatically on the start if none is provided.</p><p>The <code>keys</code> command will help you set up these keys:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">blobstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">keys</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">--help</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">blobstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">keys</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">--help</span></span></code></pre></div><p>To add an EVM private key, check the next section.</p><h4 id="evm-key" tabindex="-1">EVM key <a class="header-anchor" href="#evm-key" aria-label="Permalink to &quot;EVM key&quot;">​</a></h4><p>Because EVM keys are important, we provide a keystore that will help manage them. The keystore uses a file system keystore protected by a passphrase to store and open private keys.</p><p>To import your EVM private key, there is the <code>import</code> subcommand to assist you with that:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">blobstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">keys</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">evm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--help</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">blobstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">keys</span><span style="color:#24292E;"> </span><span style="color:#032F62;">evm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--help</span></span></code></pre></div><p>This subcommand allows you to either import a raw ECDSA private key provided as plaintext, import it from a file, or use a BIP39 mnemonic and derive a private key from it. The files are JSON keystore files encrypted using a passphrase like in <a href="https://geth.ethereum.org/docs/developers/dapp-developer/native-accounts" target="_blank" rel="noreferrer">this example</a>.</p><p>After adding the key, you can check that it&#39;s added via running:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">blobstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">keys</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">evm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">blobstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">keys</span><span style="color:#24292E;"> </span><span style="color:#032F62;">evm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span></span></code></pre></div><p>For more information about the <code>keys</code> command, check <a href="https://docs.celestia.org/nodes/blobstream-keys" target="_blank" rel="noreferrer">the <code>keys</code> documentation</a>.</p><p>Then, you will need to register the EVM address for your validator as specified in the <a href="#register-evm-address">Register EVM Address</a> section.</p><h3 id="open-the-p2p-port" tabindex="-1">Open the P2P port <a class="header-anchor" href="#open-the-p2p-port" aria-label="Permalink to &quot;Open the P2P port&quot;">​</a></h3><p>In order for the signature propagation to be successful, you will need to expose the P2P port, which is by default <code>30000</code>.</p><p>If not, then the signatures may not be available to the network and relayers will not be able to query them.</p><h3 id="start-the-orchestrator" tabindex="-1">Start the orchestrator <a class="header-anchor" href="#start-the-orchestrator" aria-label="Permalink to &quot;Start the orchestrator&quot;">​</a></h3><p>Now that we have the store initialized, we can start the orchestrator. Make sure you have your Celestia-app node RPC and gRPC accessible, and able to connect to the P2P network bootstrappers.</p><p>The orchestrator accepts the following flags:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">blobstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--help</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Starts</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Blobstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sign</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">attestations</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Usage:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">blobstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">flag</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> [flags]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Flags:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--core.grpc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">Specify</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">app</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">grpc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">address</span><span style="color:#E1E4E8;"> (default </span><span style="color:#9ECBFF;">&quot;localhost:9090&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--core.rpc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">Specify</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">app</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rest</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rpc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">address</span><span style="color:#E1E4E8;"> (default </span><span style="color:#9ECBFF;">&quot;tcp://localhost:26657&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--evm.account</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">Specify</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">EVM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">account</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">address</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">signing</span><span style="color:#E1E4E8;"> (Note: </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">key</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">should</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">be</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">keystore</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--evm.passphrase</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">evm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">account</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passphrase</span><span style="color:#E1E4E8;"> (if </span><span style="color:#9ECBFF;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">specified</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flag,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">it</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">will</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">be</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">asked</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">interactively</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--grpc.insecure</span><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">allow</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gRPC</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">over</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">insecure</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">channels,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">TLS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">must</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">TLS</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">-h,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--help</span><span style="color:#E1E4E8;">                       </span><span style="color:#9ECBFF;">help</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--home</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Blobstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">home</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">directory</span><span style="color:#E1E4E8;"> (default </span><span style="color:#9ECBFF;">&quot;/Users/joshstein/.orchestrator&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--log.format</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">logging</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">format</span><span style="color:#E1E4E8;"> (json</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">plain</span><span style="color:#E1E4E8;">) (</span><span style="color:#B392F0;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;plain&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--log.level</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">logging</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">level</span><span style="color:#E1E4E8;"> (trace</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">debug</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">info</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">warn</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">error</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">fatal</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">panic</span><span style="color:#E1E4E8;">) (</span><span style="color:#B392F0;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;info&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--p2p.bootstrappers</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">Comma-separated</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">multiaddresses</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">p2p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">peers</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">connect</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--p2p.listen-addr</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">MultiAddr</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">p2p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">peer</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">listen</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> (default </span><span style="color:#9ECBFF;">&quot;/ip4/0.0.0.0/tcp/30000&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">--p2p.nickname</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">Nickname</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">p2p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">key</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">use</span><span style="color:#E1E4E8;"> (if </span><span style="color:#9ECBFF;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">provided,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">an</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">existing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">one</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">p2p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">store</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">or</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">newly</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">generated</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">one</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">will</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">be</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">used</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">blobstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--help</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Starts</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Blobstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sign</span><span style="color:#24292E;"> </span><span style="color:#032F62;">attestations</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Usage:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">blobstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">flag</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> [flags]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Flags:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--core.grpc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">           </span><span style="color:#032F62;">Specify</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia</span><span style="color:#24292E;"> </span><span style="color:#032F62;">app</span><span style="color:#24292E;"> </span><span style="color:#032F62;">grpc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">address</span><span style="color:#24292E;"> (default </span><span style="color:#032F62;">&quot;localhost:9090&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--core.rpc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">            </span><span style="color:#032F62;">Specify</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia</span><span style="color:#24292E;"> </span><span style="color:#032F62;">app</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rest</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rpc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">address</span><span style="color:#24292E;"> (default </span><span style="color:#032F62;">&quot;tcp://localhost:26657&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--evm.account</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">         </span><span style="color:#032F62;">Specify</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">EVM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">account</span><span style="color:#24292E;"> </span><span style="color:#032F62;">address</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">signing</span><span style="color:#24292E;"> (Note: </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">private</span><span style="color:#24292E;"> </span><span style="color:#032F62;">key</span><span style="color:#24292E;"> </span><span style="color:#032F62;">should</span><span style="color:#24292E;"> </span><span style="color:#032F62;">be</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">keystore</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--evm.passphrase</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">      </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">evm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">account</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passphrase</span><span style="color:#24292E;"> (if </span><span style="color:#032F62;">not</span><span style="color:#24292E;"> </span><span style="color:#032F62;">specified</span><span style="color:#24292E;"> </span><span style="color:#032F62;">as</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flag,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">it</span><span style="color:#24292E;"> </span><span style="color:#032F62;">will</span><span style="color:#24292E;"> </span><span style="color:#032F62;">be</span><span style="color:#24292E;"> </span><span style="color:#032F62;">asked</span><span style="color:#24292E;"> </span><span style="color:#032F62;">interactively</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--grpc.insecure</span><span style="color:#24292E;">              </span><span style="color:#032F62;">allow</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gRPC</span><span style="color:#24292E;"> </span><span style="color:#032F62;">over</span><span style="color:#24292E;"> </span><span style="color:#032F62;">insecure</span><span style="color:#24292E;"> </span><span style="color:#032F62;">channels,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">if</span><span style="color:#24292E;"> </span><span style="color:#032F62;">not</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TLS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">must</span><span style="color:#24292E;"> </span><span style="color:#032F62;">use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TLS</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">-h,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--help</span><span style="color:#24292E;">                       </span><span style="color:#032F62;">help</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--home</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">                </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Blobstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">home</span><span style="color:#24292E;"> </span><span style="color:#032F62;">directory</span><span style="color:#24292E;"> (default </span><span style="color:#032F62;">&quot;/Users/joshstein/.orchestrator&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--log.format</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">          </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">logging</span><span style="color:#24292E;"> </span><span style="color:#032F62;">format</span><span style="color:#24292E;"> (json</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">plain</span><span style="color:#24292E;">) (</span><span style="color:#6F42C1;">default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;plain&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--log.level</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">           </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">logging</span><span style="color:#24292E;"> </span><span style="color:#032F62;">level</span><span style="color:#24292E;"> (trace</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">debug</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">info</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">warn</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">error</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">fatal</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">panic</span><span style="color:#24292E;">) (</span><span style="color:#6F42C1;">default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;info&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--p2p.bootstrappers</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">   </span><span style="color:#032F62;">Comma-separated</span><span style="color:#24292E;"> </span><span style="color:#032F62;">multiaddresses</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">p2p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">peers</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">connect</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--p2p.listen-addr</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">     </span><span style="color:#032F62;">MultiAddr</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">p2p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">peer</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">listen</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> (default </span><span style="color:#032F62;">&quot;/ip4/0.0.0.0/tcp/30000&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">--p2p.nickname</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;">        </span><span style="color:#032F62;">Nickname</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">p2p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">private</span><span style="color:#24292E;"> </span><span style="color:#032F62;">key</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">use</span><span style="color:#24292E;"> (if </span><span style="color:#032F62;">not</span><span style="color:#24292E;"> </span><span style="color:#032F62;">provided,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">an</span><span style="color:#24292E;"> </span><span style="color:#032F62;">existing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">one</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">p2p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">store</span><span style="color:#24292E;"> </span><span style="color:#032F62;">or</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">newly</span><span style="color:#24292E;"> </span><span style="color:#032F62;">generated</span><span style="color:#24292E;"> </span><span style="color:#032F62;">one</span><span style="color:#24292E;"> </span><span style="color:#032F62;">will</span><span style="color:#24292E;"> </span><span style="color:#032F62;">be</span><span style="color:#24292E;"> </span><span style="color:#032F62;">used</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Also, you can set the necessary configuration in the orchestrator&#39;s TOML config file. You can find the orchestrator&#39;s TOML config file in the orchestrator&#39;s home directory under <code>config/config.toml</code>. This would save you from setting all the flags in the command.</p><blockquote><p><strong><em>NOTE:</em></strong> The CLI flags take precedence over the config files for the same parameters.</p></blockquote><p>To start the orchestrator in the default home directory, run the following:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">blobstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--evm.account</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0x966e6f22781EF6a6A82BBB4DB3df8E225DfD9488</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">blobstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--evm.account</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0x966e6f22781EF6a6A82BBB4DB3df8E225DfD9488</span></span></code></pre></div><blockquote><p><strong><em>NOTE:</em></strong> The above command assumes that the necessary configuration is specified in the <code>&lt;orchestrator_home&gt;/config/config.toml</code> file.</p></blockquote><p>Then, you will be prompted to enter your EVM key passphrase so that the orchestrator can use it to sign attestations. Make sure that it&#39;s the EVM address that was provided when creating the validator. If not, then the orchestrator will not sign, and you will keep seeing a &quot;validator not part of valset&quot; warning message. If you see such message, first verify that your validator is part of the active validator set. If so, then probably the EVM address provided to the orchestrator is not the right one, and you should check which EVM address is registered to your validator. Check the <a href="#register-evm-address">Register EVM Address</a> section for more information.</p><p>If you no longer have access to your EVM address, you could always edit your validator with a new EVM address. This can be done through the <code>edit-validator</code> command. Check the <a href="#register-evm-address">Register EVM Address</a> section.</p><h3 id="known-issues" tabindex="-1">Known issues <a class="header-anchor" href="#known-issues" aria-label="Permalink to &quot;Known issues&quot;">​</a></h3><h4 id="transport-authentication-handshake-failed" tabindex="-1"><code>transport: authentication handshake failed</code> <a class="header-anchor" href="#transport-authentication-handshake-failed" aria-label="Permalink to &quot;\`transport: authentication handshake failed\`&quot;">​</a></h4><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">rpc error: code = Unavailable desc = connection error: desc = &quot;transport: authentication handshake failed: tls: first record does not look like a TLS handshake&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rpc error: code = Unavailable desc = connection error: desc = &quot;transport: authentication handshake failed: tls: first record does not look like a TLS handshake&quot;</span></span></code></pre></div><p>Seeing this error means that the orchestrator/relayer is trying to connect to a gRPC endpoint that is not secure. To bypass this, use the <code>--grpc.insecure</code> flag. However, we recommend using secure gRPC connections.</p><h4 id="failed-to-query-last-valset-before-nonce-most-likely-pruned" tabindex="-1"><code>failed to query last valset before nonce (most likely pruned)</code> <a class="header-anchor" href="#failed-to-query-last-valset-before-nonce-most-likely-pruned" aria-label="Permalink to &quot;\`failed to query last valset before nonce (most likely pruned)\`&quot;">​</a></h4><p>This warning shows that an attestation, that is needed by the orchestrator/relayer, has been pruned from the state machine. However, it&#39;s not an issue since we implemented fallback mechanisms that will use the P2P network to get it. And if that doesn&#39;t work, connecting the orchestrator/relayer to an archive node will get that attestation.</p><p>So, seeing that warning is not a problem.</p><h3 id="register-evm-address" tabindex="-1">Register EVM Address <a class="header-anchor" href="#register-evm-address" aria-label="Permalink to &quot;Register EVM Address&quot;">​</a></h3><p>When creating a validator, a random EVM address corresponding to its operator is set in the Blobstream state. This address will be used by the orchestrator to sign attestations. And since validators will generally not have access to its corresponding private key, that address needs to be edited with one whose private key is known to the validator operator.</p><blockquote><p><strong><em>NOTE:</em></strong> When a validator wants to start an orchestrator for a Celestia network for the first time, they will need to generate an EVM address offchain, either using the <a href="#evm-key">EVM keystore</a> methods or a third party software that allows generating Ethereum addresses and provide you with a private key or a BIP39 mnemonic.</p></blockquote><p>So, to edit an EVM address for a certain validator, its corresponding account needs to send a <code>RegisterEVMAddress</code> transaction with the new address.</p><p>First, you should get your validator <code>valoper</code> address. To do so, run the following:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">keys</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">show</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">validator_accoun</span><span style="color:#E1E4E8;">t</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--bech</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">val</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">keys</span><span style="color:#24292E;"> </span><span style="color:#032F62;">show</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">validator_accoun</span><span style="color:#24292E;">t</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--bech</span><span style="color:#24292E;"> </span><span style="color:#032F62;">val</span></span></code></pre></div><p>This assumes that you&#39;re using the default home directory, the default keystore etc. If not, make sure to add the flags that correspond to your situation.</p><p>To check which EVM address is registered for your <code>valoper</code> address, run the following:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">query</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">qgb</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">evm</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">validator_valoper_addres</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">query</span><span style="color:#24292E;"> </span><span style="color:#032F62;">qgb</span><span style="color:#24292E;"> </span><span style="color:#032F62;">evm</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">validator_valoper_addres</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>Then, to proceed with the edit, run the following command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">qgb</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">register</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">valoper_addres</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">new_evm_addres</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--fees</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">30000</span><span style="color:#9ECBFF;">utia</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--broadcast-mode</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--yes</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">your_wallet</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">qgb</span><span style="color:#24292E;"> </span><span style="color:#032F62;">register</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">valoper_addres</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">new_evm_addres</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--fees</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">30000</span><span style="color:#032F62;">utia</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--broadcast-mode</span><span style="color:#24292E;"> </span><span style="color:#032F62;">block</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--yes</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">your_wallet</span></span></code></pre></div><p>Example command output:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">code:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">codespace:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#B392F0;">data:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12300</span><span style="color:#9ECBFF;">A2E2F63656C65737469612E7167622E76312E4D7367526567697374657245564D41646472657373526573706F6E7365</span></span>
<span class="line"><span style="color:#B392F0;">events:</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#B392F0;">gas_used:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;66959&quot;</span></span>
<span class="line"><span style="color:#B392F0;">gas_wanted:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;210000&quot;</span></span>
<span class="line"><span style="color:#B392F0;">height:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;3&quot;</span></span>
<span class="line"><span style="color:#B392F0;">info:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#B392F0;">logs:</span></span>
<span class="line"><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">events:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">attributes:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">key:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">action</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">value:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/celestia.blobstream.v1.MsgRegisterEVMAddress</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">message</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">msg_index:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">raw_log:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;[{&quot;msg_index&quot;:0,&quot;events&quot;:[{&quot;type&quot;:&quot;message&quot;,&quot;attributes&quot;:[{&quot;key&quot;:&quot;action&quot;,&quot;value&quot;:&quot;/celestia.blobstream.v1.MsgRegisterEVMAddress&quot;}]}]}]&#39;</span></span>
<span class="line"><span style="color:#B392F0;">timestamp:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#B392F0;">tx:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">null</span></span>
<span class="line"><span style="color:#B392F0;">txhash:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4199</span><span style="color:#9ECBFF;">EA959A2CFEFCD4726D8D8F7B536458A46A27318D3483A4E9614F560606BC</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">code:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">codespace:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">data:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12300</span><span style="color:#032F62;">A2E2F63656C65737469612E7167622E76312E4D7367526567697374657245564D41646472657373526573706F6E7365</span></span>
<span class="line"><span style="color:#6F42C1;">events:</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#6F42C1;">gas_used:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;66959&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">gas_wanted:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;210000&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">height:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;3&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">info:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">logs:</span></span>
<span class="line"><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">events:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">attributes:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">key:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">action</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">value:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/celestia.blobstream.v1.MsgRegisterEVMAddress</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">message</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">msg_index:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">raw_log:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;[{&quot;msg_index&quot;:0,&quot;events&quot;:[{&quot;type&quot;:&quot;message&quot;,&quot;attributes&quot;:[{&quot;key&quot;:&quot;action&quot;,&quot;value&quot;:&quot;/celestia.blobstream.v1.MsgRegisterEVMAddress&quot;}]}]}]&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">timestamp:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">tx:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">null</span></span>
<span class="line"><span style="color:#6F42C1;">txhash:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4199</span><span style="color:#032F62;">EA959A2CFEFCD4726D8D8F7B536458A46A27318D3483A4E9614F560606BC</span></span></code></pre></div><p>Now, you can verify that the EVM address has been updated using the following command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">query</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">qgb</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">evm</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">validator_valoper_addres</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">query</span><span style="color:#24292E;"> </span><span style="color:#032F62;">qgb</span><span style="color:#24292E;"> </span><span style="color:#032F62;">evm</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">validator_valoper_addres</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>Now, you can restart the orchestrator, and it should start signing.</p><p>Note: A validator set change is triggered if more than 5% of the total staking power of the network changes. This means that even if you change your EVM address, and you don&#39;t see your orchestrator signing, it&#39;s alright. Just wait until the validator set changes, and then your orchestrator will automatically start signing.</p><h3 id="updating-the-evm-address-if-its-corresponding-private-key-is-lost" tabindex="-1">Updating the EVM address if its corresponding private key is lost <a class="header-anchor" href="#updating-the-evm-address-if-its-corresponding-private-key-is-lost" aria-label="Permalink to &quot;Updating the EVM address if its corresponding private key is lost&quot;">​</a></h3><p>If, for some reason, the private key, corresponding to the EVM account that was registered above, was lost, or some validator wants to change it for some reason, then they can re-register another EVM address for their validator using the same above command using the new EVM address.</p><p>If the validator still has access to the previously running orchestrator, it would be safer to keep it running in a separate process, initialize a new orchestrator in a new home directory, and run it using the new EVM address. Then, once the new orchestrator starts signing, the old one can be stopped.</p><p>Running a second orchestrator in the same machine would require using different P2P listening ports, i.e. changing the <code>listen-addr</code> value in the <code>&lt;orchestrator_home&gt;/config/config.toml</code> file and using different ports between the two instances.</p><h4 id="systemd-service" tabindex="-1">Systemd service <a class="header-anchor" href="#systemd-service" aria-label="Permalink to &quot;Systemd service&quot;">​</a></h4><p>If you want to start the orchestrator as a <code>systemd</code> service, you could use the following:</p><ul><li>Make sure you have the store initialized and the EVM address private key imported. Check the above sections for how to do that.</li><li>Put the following configuration under: <code>/etc/systemd/system/orchestrator.service</code>:</li></ul><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[Unit]</span></span>
<span class="line"><span style="color:#e1e4e8;">Description=Blobstream orchestrator service</span></span>
<span class="line"><span style="color:#e1e4e8;">After=network.target</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">[Service]</span></span>
<span class="line"><span style="color:#e1e4e8;">Type=simple</span></span>
<span class="line"><span style="color:#e1e4e8;">ExecStart=&lt;absolute_path_to_blobstream_binary&gt; orchestrator start --evm.account &lt;evm_account&gt; --evm.passphrase &lt;evm_passphrase&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">LimitNOFILE=infinity</span></span>
<span class="line"><span style="color:#e1e4e8;">LimitCORE=infinity</span></span>
<span class="line"><span style="color:#e1e4e8;">Restart=always</span></span>
<span class="line"><span style="color:#e1e4e8;">RestartSec=1</span></span>
<span class="line"><span style="color:#e1e4e8;">StartLimitBurst=5</span></span>
<span class="line"><span style="color:#e1e4e8;">User=&lt;username&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">StandardError=journal</span></span>
<span class="line"><span style="color:#e1e4e8;">StandardOutput=journal</span></span>
<span class="line"><span style="color:#e1e4e8;">TTYPath=/dev/tty0</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">[Install]</span></span>
<span class="line"><span style="color:#e1e4e8;">WantedBy=multi-user.target</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[Unit]</span></span>
<span class="line"><span style="color:#24292e;">Description=Blobstream orchestrator service</span></span>
<span class="line"><span style="color:#24292e;">After=network.target</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">[Service]</span></span>
<span class="line"><span style="color:#24292e;">Type=simple</span></span>
<span class="line"><span style="color:#24292e;">ExecStart=&lt;absolute_path_to_blobstream_binary&gt; orchestrator start --evm.account &lt;evm_account&gt; --evm.passphrase &lt;evm_passphrase&gt;</span></span>
<span class="line"><span style="color:#24292e;">LimitNOFILE=infinity</span></span>
<span class="line"><span style="color:#24292e;">LimitCORE=infinity</span></span>
<span class="line"><span style="color:#24292e;">Restart=always</span></span>
<span class="line"><span style="color:#24292e;">RestartSec=1</span></span>
<span class="line"><span style="color:#24292e;">StartLimitBurst=5</span></span>
<span class="line"><span style="color:#24292e;">User=&lt;username&gt;</span></span>
<span class="line"><span style="color:#24292e;">StandardError=journal</span></span>
<span class="line"><span style="color:#24292e;">StandardOutput=journal</span></span>
<span class="line"><span style="color:#24292e;">TTYPath=/dev/tty0</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">[Install]</span></span>
<span class="line"><span style="color:#24292e;">WantedBy=multi-user.target</span></span></code></pre></div><ul><li>Start the orchestrator service using:</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span></span></code></pre></div><ul><li>Follow the logs to see if everything is running correctly:</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">journalctl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">orchestrator</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">journalctl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-u</span><span style="color:#24292E;"> </span><span style="color:#032F62;">orchestrator</span></span></code></pre></div><p>And you should see the orchestrator signing.</p><h5 id="issue-journald-not-outputting-the-logs" tabindex="-1">Issue: Journald not outputting the logs <a class="header-anchor" href="#issue-journald-not-outputting-the-logs" aria-label="Permalink to &quot;Issue: Journald not outputting the logs&quot;">​</a></h5><p>Sometimes, <code>journald</code> wouldn&#39;t load the logs from the specified service. An easy fix would be to restart it:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">restart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemd-journald</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">restart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemd-journald</span></span></code></pre></div><p>Then, you should be able to follow the logs as expected.</p>`,95),p=[l];function t(r,c,y,E,i,d){return a(),n("div",null,p)}const u=s(e,[["render",t]]);export{h as __pageData,u as default};
